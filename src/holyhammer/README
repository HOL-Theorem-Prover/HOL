HOLyHammer is a machine learning for theorem proving framework.

Requires:

* OCaml >= 3.12
    sudo apt-get install ocaml 
* g++ >= 4.8 (recent version with C++11 support)  
  Ubuntu 12.04:
    sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    sudo apt-get update
    sudo apt-get install g++-4.8

Install holyhammer: (done during the build)
 
  run Holmake in src/holyhammer
  run Holmake in src/holyhammer/hh/hh1
  run Holmake in src/holyhammer/hh
  run Holmake in src/holyhammer/predict
  run Holmake in src/holyhammer/predict/mepo

Adding provers:
  
  Eprover and Z3 are given by default are for linux 64 bit. 
  Please replace the binary in provers/eprover/eprover if necessary.
  You may use different versions but parsing may need to be fixed in 
  provers/"prover".sh . 
  The name of the binary for Vampire has to be vampire.
    
Removing provers:

  Delete the binaries (eprover,z3 or vampire) in
  their respective directory provers/"prover".

Predictors:
  The two best predictors are KNN and Mepo. 
  Mepo works best for a definition based proof with small theorems
  KNN learns from previous proofs so it is useful on well developed theories.
  The default predictor is KNN.
  Please switch between them if the proof fails by using
  "set_predictors Mepo;" and "set_predictors Knn;"
   
Example: 

  load "holyHammer";
  open holyHammer;
  hh [] ``1 + 1 = 2``;
  METIS_PROVE lemmas ``1 + 1 = 2``; 
  load "complexTheory";
  hh_atp "eprover" [] ``0 <> 1``;

Questions:

  If you have any question, you can send an email to thibault_gauthier@hotmail.fr.
