# HOL Light files
# HL=hh1/lib hh1/fusion hh1/basics hh1/printer hh1/preterm hh1/hl_parser hh1/equal \
#    hh1/bool hh1/drule hh1/tactics hh1/simp hh1/theorems hh1/canon hh1/fol hh1/follist hh1/meson
# HH1 (old files)
# HH1=hh1/hh_symbols hh1/features_dt hh1/hh_tac hh1/hh_write
# HH2 (new files)
# FILES=hh_parse hh_lexer read predict init dependency thf1hh1 predict_knn proto
# ALLFILES=$(HL) $(HH1) $(FILES)

HH2_CMX=hh_parse.cmx hh_lexer.cmx read.cmx predict.cmx init.cmx dependency.cmx thf1hh1.cmx predict_knn.cmx

HL_CMX=hh1/lib.cmx hh1/fusion.cmx hh1/basics.cmx hh1/printer.cmx hh1/preterm.cmx hh1/hl_parser.cmx hh1/equal.cmx hh1/bool.cmx hh1/drule.cmx hh1/tactics.cmx hh1/simp.cmx hh1/theorems.cmx hh1/canon.cmx hh1/fol.cmx hh1/follist.cmx hh1/meson.cmx hh1/hh_symbols.cmx hh1/features_dt.cmx hh1/hh_tac.cmx hh1/hh_write.cmx 

ALL_CMX=$(HL_CMX) $(HH2_CMX)

all: $(HH2_CMX) hh

hh: main.ml
	ocamlopt nums.cmxa str.cmxa unix.cmxa -o $@ -I hh1 $(ALL_CMX) $<

hh_parse.ml: hh_parse.mly
	ocamlyacc $<
	rm hh_parse.mli

hh_lexer.ml: hh_lexer.mll hh_parse.ml
	ocamllex $<
	
hh_parse.cmx: hh_parse.ml
	ocamlopt -c $<
hh_lexer.cmx: hh_lexer.ml
	ocamlopt -c $<
read.cmx: read.ml
	ocamlopt -c -I hh1 $<
predict.cmx: predict.ml
	ocamlopt -c -I hh1 $<
init.cmx: init.ml
	ocamlopt -c -I hh1 $<
dependency.cmx: dependency.ml
	ocamlopt -c -I hh1 $<
thf1hh1.cmx: thf1hh1.ml
	ocamlopt -c -I hh1 $<
predict_knn.cmx: predict_knn.ml
	ocamlopt -c -I hh1 $<

clean:
	rm -f hh *cmx *cmi *_lexer.ml *_parse.ml *.o *.mli
