\documentclass{article}

\usepackage{holtexbasic}
\usepackage{proof}
\usepackage{alltt}
\include{macros.tex}

\renewcommand{\HOLConst}[1]{\textsf{#1}}

\title{Writing \LaTeX{} with Embedded HOL}
\author{HOL Developers}
\date{}

\begin{document}

\maketitle
\begin{abstract}
This document attempts to provide a tutorial-like introduction to the process of generating \LaTeX{} files (and ultimately, PDFs) that include pretty-printed material from HOL theories.
While the \textsc{Description} manual includes a fairly careful description of HOL's solution to this problem (the ``munger''), it can be hard to get started using just that documentation.
This document provides a simple, sample document that covers a number of standard features, and does so in a style that we hope is easy to understand.
\end{abstract}

\section{Introduction}

The premise is that this document will simultaneously explain \LaTeX-munging while illustrating the use of the technology with respect to a miniature HOL formalisation (on binary trees).
Under \texttt{HOL/examples/latex-generation}, we find a somewhat plausible picture:
in the directory \texttt{theories}, there is a HOL development consisting of two theory files: \texttt{sampleTreeScript.sml} and \texttt{bstScript.sml}, with the latter building on the former.
This represents the HOL development that is to be documented for publication in this paper.
In the second directory, \texttt{paper} are all the sources for this PDF.

There is no requirement for the two directories to be siblings of each other in this way, but it is convenient in this context.
In practice, the theory files will be in one repository (possibly quite public), and the paper will be in a separate space, possibly backed by a more private repository.

The basic flow is that as authors we will write a special \texttt{paper.htex} file, pretending that we are writing normal \LaTeX{} document, but with access to special extra commands (\texttt{\bs{}HOLthm\lb\dots\rb} and others) for inserting HOL material.
Our source \texttt{paper.htex} file will be built into the PDF by first being translated into genuine \LaTeX{} file \texttt{paper.tex}, which can then be turned into a PDF with the usual technology (here we will assume use of \texttt{latexmk}).

\subsection{Manifest}

The following summarises the contents of the \texttt{papers} directory, with more details to come later in this document:
\begin{description}
\item[\texttt{.gitignore}] Specification of names of generated files that \texttt{git} should ignore so that generated files don't end up being committed to repositories.
\item[\texttt{Holmakefile}] This file specifies the standard build instructions, and includes a pointer to the directory where the HOL sources are to be found in the \texttt{INCLUDES =} line.
\item[\texttt{macros.tex}] A file of macros supporting our paper; this file can be (and is) perfectly standard \LaTeX, and is \texttt{\bs{}include}-d into the \texttt{paper.htex} file as one might normally proceed.
\item[\texttt{overrides}] This files includes custom replacements for HOL symbols to give them prettier \LaTeX{} renderings.
\item[\texttt{paper.htex}] The sources for this paper.
\item[\texttt{ppLib.sml}] A small HOL ``library'' that refers to the HOL theories where the desired results are present, or which have ancestors where those results are present.
In our case, the \texttt{ppLib.sml} file refers to \texttt{bstTheory}, which will give us the ability to refer to theorems from \texttt{bstTheory} and \texttt{sampleTheory} both (because the latter is an ancestor of the former, and it's impossible to have a child theory in context without also having its parent).
\end{description}

After a call to \texttt{Holmake}, the required theories (\texttt{bst} and its ancestors) in \texttt{theories} will be rebuilt, and the following files will be generated in the \texttt{papers} directory:
\begin{description}
\item[\texttt{.hol}] The usual output directory containing HOL object files, logs and the like.
\item[\texttt{holtexbasic.sty}] A file specifying the standard HOL \LaTeX{} macros, copied across into the working directory from the HOL source tree.
\item[\texttt{munge}] The munging executable responsible for turning \texttt{paper.htex} into \texttt{paper.tex}.
This program is a Unix filter, reading from \texttt{stdin} and writing to \texttt{stdout}.
\item[\texttt{paper.pdf}] The PDF of this document.
\item[\texttt{paper.tex}] The translated paper file, containing \LaTeX{} replacements for all of the special HOL-macros.
\item[\texttt{paper.*}] A slew of the usual auxiliary files generated by \LaTeX{} and \texttt{latexmk} as the PDF is generated.
\end{description}

\subsection{Sample Usages}

\noindent The output on the right is generated by writing what appears in the left column:

\begin{center}
\begin{minipage}[t]{0.35\textwidth}
\begin{alltt}
Lead-in text:
\bs{}begin\lb{}alltt\rb{}
Alltt text:
\bs{}HOLthm\lb{}bst.keys_elems\rb{}
\bs{}end\lb{}alltt\rb{}
The constant \bs{}HOLtm\lb{}keys\rb{}
returns the set of a
binary search tree's keys.
\end{alltt}
\end{minipage}\hfill{}
\begin{minipage}[t]{0.55\textwidth}
Lead-in text:
\begin{alltt}
Alltt text:
\HOLthm{bst.keys_elems}
\end{alltt}
The constant \HOLtm{keys} returns the set of a binary search tree's keys.
\end{minipage}
\end{center}

\end{document}
