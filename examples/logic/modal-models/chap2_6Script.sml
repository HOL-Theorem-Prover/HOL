open HolKernel Parse boolLib bossLib;
open chap1Theory;
open pred_setTheory;
open relationTheory;
open arithmeticTheory;
open set_relationTheory;

open chap2_1Theory;
open chap2_2Theory;
open chap2_4Theory;
open chap2_5Theory;
open equiv_on_partitionTheory;
open prim_recTheory;
open listTheory;
open rich_listTheory;
open finite_mapTheory;
open combinTheory;
open folModelsTheory;
open folLangTheory;
open folCanonTheory;
open ultrafilterTheory;
open ultraproductTheory;
open lemma2_73Theory;
open pairTheory;


val _ = new_theory "chap2_6";
val _ = temp_delsimps ["satis_def"]

val L1tau_def = Define`
L1tau phi <=> form_functions phi = {} /\
              form_predicates phi ‚äÜ (0,2) INSERT {(p,1)| p IN (univ (:num))}`

Theorem ST_L1tau:
!phi x. L1tau (ST x phi)
Proof
Induct_on `phi` (* 5 *) >>
fs[L1tau_def,fDISJ_def,fNOT_def,fAND_def]
QED

val folm2mm_def = Define`
folm2mm FM = <| frame := <| world := FM.Dom ;
                              rel := \w1 w2. (FM.Pred 0 [w1;w2] /\
                                              w1 IN FM.Dom /\ w2 IN FM.Dom) |>;
                 valt := \v w. (FM.Pred v [w] /\ w IN FM.Dom) |>`;


Theorem MAP_LIST_EQ :
  !l f g. (!m. MEM m l ==> f m = g m) ==> MAP f l = MAP g l
Proof
  rw[] >> irule LIST_EQ >> rw[EL_MAP] >> metis_tac[EL_MEM]
QED


Theorem LIST_UNION_EMPTY:
  !l. (LIST_UNION l = {}) <=> (!s. MEM s l ==> s = {})
Proof
  rw[EQ_IMP_THM]
  >- (SPOSE_NOT_THEN ASSUME_TAC >>
  `?x. x IN s` by metis_tac[MEMBER_NOT_EMPTY] >>
  `x IN (LIST_UNION l)` by metis_tac[IN_LIST_UNION] >>
  metis_tac[MEMBER_NOT_EMPTY])
  >- (`¬¨(?s. s IN (LIST_UNION l))` suffices_by metis_tac[MEMBER_NOT_EMPTY] >>
     `!s. MEM s l ==> (!x. x NOTIN s)` by metis_tac[MEMBER_NOT_EMPTY] >>
     SPOSE_NOT_THEN ASSUME_TAC >> metis_tac[IN_LIST_UNION])
QED

Theorem FC_EMPTY_termval:
  !M1 M2. (M1.Dom = M2.Dom /\
           M1.Pred = M2.Pred /\
           (!n l. l <> [] ==> M1.Fun n l = M2.Fun n l))
            ==> !t œÉ. FCT t = {} ==>
            termval M1 œÉ t = termval M2 œÉ t
Proof
  strip_tac >> strip_tac >> strip_tac >> completeInduct_on `term_size t` >> rw[] >>
  Cases_on `t` >> fs[FCT_def,termval_def] >> Cases_on `l = []` >> fs[] >>
  `(MAP (termval M1 œÉ) l) = (MAP (termval M2 œÉ) l)` suffices_by metis_tac[] >>
  irule MAP_LIST_EQ >> rw[] >> Cases_on `m` >> rw[termval_def] >>
  `term_size (Fn n' l') < 1 + (n + term1_size l)` by fs[term_size_lemma] >>
  first_x_assum (qspec_then `term_size (Fn n' l')` assume_tac) >>
  `1 + (n + term1_size l) = n + (term1_size l + 1)` by fs[] >>
  fs[] >> first_x_assum drule >> rw[] >>
  first_x_assum (qspec_then `Fn n' l'` assume_tac) >> fs[term_size_def] >>
  Cases_on `l' = []`
  >- (fs[] >> `MEM (FCT (Fn n' [])) (MAP (Œªa. FCT a) l)` by (fs[MEM_MAP] >>
     qexists_tac `Fn n' []` >> fs[FCT_def]) >>
     `(FCT (Fn n' [])) = {}` by metis_tac[LIST_UNION_EMPTY] >> fs[FCT_def])
  >- (first_x_assum irule >> rw[] >>
     `MEM (FCT (Fn n' l')) (MAP (Œªa. FCT a) l)` by (fs[MEM_MAP] >>
     qexists_tac `Fn n' l'` >> fs[FCT_def]) >>
     `(FCT (Fn n' l')) = {}` by metis_tac[LIST_UNION_EMPTY] >>
     fs[FCT_def] >> Cases_on `l' = []` >> fs[])
QED


Theorem FC_EMPTY_feval:
   !M1 M2. (M1.Dom = M2.Dom /\
            M1.Pred = M2.Pred /\
            (!n l. l <> [] ==> M1.Fun n l = M2.Fun n l))
            ==> !phi œÉ. FC phi = {} ==>
            feval M1 œÉ phi = feval M2 œÉ phi
Proof
  strip_tac >> strip_tac >> strip_tac >>
  Induct_on `phi` >> rw[fsatis_def,feval_def,valuation_def] >>
  `(MAP (termval M1 œÉ) l) = (MAP (termval M2 œÉ) l)` suffices_by metis_tac[] >>
  irule MAP_LIST_EQ >> rw[] >> irule FC_EMPTY_termval >> rw[] >>
  `MEM (FCT m) (MAP FCT l)` suffices_by metis_tac[LIST_UNION_EMPTY] >>
  fs[MEM_MAP] >> metis_tac[]
QED


Theorem FC_EMPTY_fsatis:
   !M1 M2. (M1.Dom = M2.Dom /\
            M1.Pred = M2.Pred /\
            (!n l. l <> [] ==> M1.Fun n l = M2.Fun n l))
            ==> !phi œÉ. FC phi = {} ==>
            fsatis M1 œÉ phi = fsatis M2 œÉ phi
Proof
  rw[fsatis_def,feval_def,valuation_def] >> metis_tac[FC_EMPTY_feval]
QED



val ST_form_functions_EMPTY = store_thm(
  "ST_form_functions_EMPTY",
  ``!f x. form_functions (ST x f) = {}``,
  Induct_on `f` >>
 rw[ST_def,form_functions_def,fNOT_def,fAND_def,fDISJ_def,Exists_def]);


val ST_FV_singleton = store_thm(
  "ST_FV_singleton",
  ``!f x. (FV (ST x f)) SUBSET {x}``,
  Induct_on `f` >> rw[ST_def,FV_def,fNOT_def,fAND_def,fDISJ_def] >>
  fs[SUBSET_DEF] >> metis_tac[]);

Theorem term_functions_EMPTY_termval:
!t. term_functions t = {} ==>
               !M1 M2 œÉ. M1.Dom = M2.Dom /\
                         M1.Pred = M2.Pred ==>
               (termval M1 œÉ t = termval M2 œÉ t)
Proof
rw[] >> Cases_on `t` >> fs[term_functions_def]
QED


Theorem form_functions_EMPTY_feval:
!phi. form_functions phi = {} ==>
               !M1 M2 œÉ. M1.Dom = M2.Dom /\
                         M1.Pred = M2.Pred ==>
               (feval M1 œÉ phi <=> feval M2 œÉ phi)
Proof
Induct_on `phi` >> rw[feval_def] (* 3 *)
>- (`(MAP (termval M1 œÉ) l) = (MAP (termval M2 œÉ) l)` suffices_by metis_tac[] >>
   irule MAP_CONG >> rw[] >>
   `term_functions x = {}`
     suffices_by metis_tac[term_functions_EMPTY_termval] >>
   SPOSE_NOT_THEN ASSUME_TAC >> fs[GSYM MEMBER_NOT_EMPTY] >>
   `x' IN (LIST_UNION (MAP term_functions l))`
    suffices_by metis_tac[MEMBER_NOT_EMPTY] >>
   rw[IN_LIST_UNION] >> rw[MEM_MAP,PULL_EXISTS] >> metis_tac[])
>- metis_tac[]
>- metis_tac[]
QED



Theorem thm_2_65:
  !M. countably_saturated (mm2folm M) ==> M_sat M
Proof
  rw[countably_saturated_def,n_saturated_def,M_sat_def] >>
  qabbrev_tac ‚ÄòŒ£' = {fR (Fn 0 []) (fV x)} UNION (IMAGE (ST x) Œ£)‚Äô >>
  qabbrev_tac ‚ÄòMA = <| Dom := (mm2folm M).Dom;
                       Fun := (Œªn args. if n = 0 ‚àß args = [] then w
                                        else CHOICE (mm2folm M).Dom);
                       Pred := (mm2folm M).Pred |>‚Äô >>
  ‚Äòconsistent MA Œ£'‚Äô
    by (rw[consistent_def] >> fs[fin_satisfiable_in_def] >>
        Cases_on ‚Äò(fR (Fn 0 []) (fV x)) IN G0‚Äô (* 2 *)
        >- (‚ÄòG0 = (fR (Fn 0 []) (fV x)) INSERT (G0 DELETE (fR (Fn 0 []) (fV x)))‚Äô
              by fs[INSERT_DELETE] >>
            ‚Äò!f. f IN G0 ==> f = fR (Fn 0 []) (fV x) \/ f IN (IMAGE (ST x) Œ£)‚Äô
              by (rpt strip_tac >>
                  ‚Äòf <> fR (Fn 0 []) (fV x) ==> f ‚àà IMAGE (ST x) Œ£‚Äô
                    suffices_by metis_tac[] >>
                  strip_tac >>
                  ‚Äòf IN Œ£'‚Äô by fs[SUBSET_DEF] >> fs[Abbr‚ÄòŒ£'‚Äô] (* 2 *)
                  >- fs[] >- metis_tac[]) >>
            fs[satisfiable_in_def] >>
            qabbrev_tac ‚ÄòG0' = G0 DELETE fR (Fn 0 []) (fV x)‚Äô >>
            qabbrev_tac
            ‚Äòps =
             {CHOICE {x' | x' IN Œ£ /\ f = ST x x'} | f IN G0'}‚Äô >>
            ‚Äò!f. (f IN G0 /\ f <> fR (Fn 0 []) (fV x))
                 ==> {x' | x' IN Œ£ /\ f = ST x x'} <> {}‚Äô
              by (rw[] >> rfs[Abbr‚ÄòŒ£'‚Äô,IMAGE_DEF] >> rw[GSYM MEMBER_NOT_EMPTY] >>
                  metis_tac[]) >>
            ‚Äòps SUBSET Œ£‚Äô
              by
              (rw[SUBSET_DEF,Abbr‚Äòps‚Äô] >>
               ‚ÄòCHOICE {x' | x' ‚àà Œ£ ‚àß f = ST x x'} IN
                                             {x' | x' ‚àà Œ£ ‚àß f = ST x x'}‚Äô
                 suffices_by fs[] >>
               ‚Äò{x' | x' ‚àà Œ£ ‚àß f = ST x x'} <> {}‚Äô
                 suffices_by metis_tac[CHOICE_DEF] >>
               fs[Abbr‚ÄòG0'‚Äô] >> metis_tac[]) >>
            ‚ÄòFINITE ps‚Äô
              by (‚ÄòFINITE {{x' | x' ‚àà Œ£ ‚àß f = ST x x'} | f ‚àà G0'} /\
                   ps = IMAGE CHOICE {{x' | x' ‚àà Œ£ ‚àß f = ST x x'} | f ‚àà G0'}‚Äô
                    suffices_by metis_tac[IMAGE_FINITE] >>
                  rw[Once EXTENSION,EQ_IMP_THM,IMAGE_DEF,Abbr‚Äòps‚Äô] (* 3 *)
                  >- (‚Äò{{x' | x' ‚àà Œ£ ‚àß f = ST x x'} | f ‚àà G0'} =
                       IMAGE (\f. {x' | x' ‚àà Œ£ ‚àß f = ST x x'}) G0' /\
                       FINITE G0'‚Äô suffices_by metis_tac[IMAGE_FINITE] >>
                      rw[IMAGE_DEF,Once EXTENSION,Abbr‚ÄòG0'‚Äô] >>
                      qabbrev_tac ‚Äòa = fR (Fn 0 []) (fV x)‚Äô >>
                      fs[INSERT_DELETE]
                     )
                  >> metis_tac[]
                 ) >>
            ‚Äò‚àÉx. (x ‚àà M.frame.world ‚àß M.frame.rel w x) ‚àß
                 ‚àÄform. form ‚àà ps ‚áí satis M x form‚Äô by metis_tac[] >>
            qexists_tac ‚Äò\n. x'‚Äô >> rw[fsatis_def] (* 5 *)
            >- (rw[Abbr‚ÄòMA‚Äô] >> rw[IMAGE_DEF,SUBSET_DEF,mm2folm_def])
            >- fs[IMAGE_DEF,SUBSET_DEF,Abbr‚ÄòMA‚Äô,valuation_def,mm2folm_def]
            >- (fs[] >> rw[feval_def,termval_def,Abbr‚ÄòMA‚Äô,
                           valuation_def,mm2folm_def])
            >- (‚ÄòIMAGE (Œªn. x') ùïå(:num) ‚äÜ MA.Dom‚Äô
                  by (rw[Abbr‚ÄòMA‚Äô] >> rw[IMAGE_DEF,SUBSET_DEF,mm2folm_def]) >>
                rw[valuation_def] >> fs[IMAGE_DEF,SUBSET_DEF])
            >- (‚Äò‚àÉt. phi = ST x t ‚àß t ‚àà ps‚Äô
                  by
                  (fs[Abbr‚ÄòG0'‚Äô] (*2*)
                   >- metis_tac[]
                   >- (‚Äòphi IN Œ£'‚Äô by fs[SUBSET_DEF] >>
                       fs[Abbr‚Äòps‚Äô,Abbr‚ÄòŒ£'‚Äô] (* 2 *)
                       >- fs[] >>
                       fs[PULL_EXISTS] >>
                       qexists_tac ‚ÄòST x x''‚Äô >>
                       rw[] >>
                       ‚ÄòCHOICE {x' | x' ‚àà Œ£ ‚àß ST x x'' = ST x x'} IN
                           {x' | x' ‚àà Œ£ ‚àß ST x x'' = ST x x'}‚Äô
                         suffices_by fs[] >>
                       ‚Äò{x' | x' ‚àà Œ£ ‚àß ST x x'' = ST x x'} <> {}‚Äô
                         suffices_by metis_tac[CHOICE_DEF] >>
                       rw[GSYM MEMBER_NOT_EMPTY] >> metis_tac[])
                  ) >>
                ‚Äòsatis M x' t‚Äô by metis_tac[] >>
                ‚Äò(Œªn. x') x = x'‚Äô by fs[] >>
                ‚ÄòIMAGE (Œªn. x') ùïå(:num) ‚äÜ M.frame.world‚Äô
                  by fs[Abbr‚ÄòMA‚Äô,mm2folm_def,IMAGE_DEF,SUBSET_DEF] >>
                imp_res_tac prop_2_47_i >>
                ‚Äòsatis M ((Œªn. x') x) t‚Äô by metis_tac[] >>
                ‚Äòfsatis (mm2folm M) (Œªn. x') (ST x t)‚Äô by fs[] >>
                ‚Äòfeval (mm2folm M) (Œªn. x') phi <=>
                 feval MA (Œªn. x') phi‚Äô
                  suffices_by metis_tac[fsatis_def] >>
                ‚Äò!phi. form_functions (ST x phi) = {}‚Äô
                  by metis_tac[ST_form_functions_EMPTY] >>
                ‚Äò!phi. form_functions phi = {} ==>
                       !M1 M2 œÉ. M1.Dom = M2.Dom /\
                                 M1.Pred = M2.Pred ==>
                                 (feval M1 œÉ phi <=> feval M2 œÉ phi)‚Äô
                  by metis_tac[form_functions_EMPTY_feval] >>
                ‚Äò(mm2folm M).Dom = MA.Dom‚Äô by fs[mm2folm_def,Abbr‚ÄòMA‚Äô] >>
                ‚Äò(mm2folm M).Pred = MA.Pred‚Äô by fs[mm2folm_def,Abbr‚ÄòMA‚Äô] >>
                metis_tac[]))
        >- (‚Äò!f. f IN G0 ==> f IN (IMAGE (ST x) Œ£)‚Äô
              by (rpt strip_tac >>
                  ‚Äòf IN Œ£'‚Äô by fs[SUBSET_DEF] >> fs[Abbr‚ÄòŒ£'‚Äô] (* 2 *)
                  >- fs[] >- metis_tac[]) >>
            fs[satisfiable_in_def] >>
            qabbrev_tac
            ‚Äòps =
             {CHOICE {x' | x' IN Œ£ /\ f = ST x x'} |
             f IN G0}‚Äô >>
            ‚Äò!f. f IN G0
                 ==> {x' | x' IN Œ£ /\ f = ST x x'} <> {}‚Äô
              by
              (rw[] >> rfs[Abbr‚ÄòŒ£'‚Äô,IMAGE_DEF] >> rw[GSYM MEMBER_NOT_EMPTY] >>
               metis_tac[]) >>
            ‚Äòps SUBSET Œ£‚Äô
              by
              (rw[SUBSET_DEF,Abbr‚Äòps‚Äô] >>
               ‚ÄòCHOICE {x' | x' ‚àà Œ£ ‚àß f = ST x x'} IN
                  {x' | x' ‚àà Œ£ ‚àß f = ST x x'}‚Äô
                 suffices_by fs[] >>
               ‚Äò{x' | x' ‚àà Œ£ ‚àß f = ST x x'} <> {}‚Äô
                 suffices_by metis_tac[CHOICE_DEF] >>
               metis_tac[]) >>
            ‚ÄòFINITE ps‚Äô
              by (‚ÄòFINITE {{x' | x' ‚àà Œ£ ‚àß f = ST x x'} | f ‚àà G0} /\
                   ps = IMAGE CHOICE {{x' | x' ‚àà Œ£ ‚àß f = ST x x'} | f ‚àà G0}‚Äô
                    suffices_by metis_tac[IMAGE_FINITE] >>
                  rw[Once EXTENSION,EQ_IMP_THM,IMAGE_DEF,Abbr‚Äòps‚Äô] (* 3 *)
                  >- (‚Äò{{x' | x' ‚àà Œ£ ‚àß f = ST x x'} | f ‚àà G0} =
                       IMAGE (\f. {x' | x' ‚àà Œ£ ‚àß f = ST x x'}) G0 /\
                       FINITE G0‚Äô suffices_by metis_tac[IMAGE_FINITE] >>
                      rw[IMAGE_DEF,Once EXTENSION])
                  >> metis_tac[]
                 ) >>
            ‚Äò‚àÉx. (x ‚àà M.frame.world ‚àß M.frame.rel w x) ‚àß
                 ‚àÄform. form ‚àà ps ‚áí satis M x form‚Äô by metis_tac[] >>
            qexists_tac ‚Äò\n. x'‚Äô >> rw[fsatis_def] (* 3 *)
            >- (rw[Abbr‚ÄòMA‚Äô] >> rw[IMAGE_DEF,SUBSET_DEF,mm2folm_def])
            >- fs[IMAGE_DEF,SUBSET_DEF,Abbr‚ÄòMA‚Äô,valuation_def,mm2folm_def]
            >- (‚Äò‚àÉt. phi = ST x t ‚àß t ‚àà ps‚Äô
                  by
                  (‚Äòphi IN Œ£'‚Äô by fs[SUBSET_DEF] >>
                   fs[Abbr‚Äòps‚Äô,Abbr‚ÄòŒ£'‚Äô] (* 2 *)
                   >- fs[] >>
                   fs[PULL_EXISTS] >>
                   qexists_tac ‚ÄòST x x''‚Äô >>
                   rw[] >>
                   ‚ÄòCHOICE {x' | x' ‚àà Œ£ ‚àß ST x x'' = ST x x'} IN
                      {x' | x' ‚àà Œ£ ‚àß ST x x'' = ST x x'}‚Äô suffices_by fs[] >>
                   ‚Äò{x' | x' ‚àà Œ£ ‚àß ST x x'' = ST x x'} <> {}‚Äô
                     suffices_by metis_tac[CHOICE_DEF] >>
                   rw[GSYM MEMBER_NOT_EMPTY] >> metis_tac[]) >>
                ‚Äòsatis M x' t‚Äô by metis_tac[] >>
                ‚Äò(Œªn. x') x = x'‚Äô by fs[] >>
                ‚ÄòIMAGE (Œªn. x') ùïå(:num) ‚äÜ M.frame.world‚Äô
                  by fs[Abbr‚ÄòMA‚Äô,mm2folm_def,IMAGE_DEF,SUBSET_DEF] >>
                imp_res_tac prop_2_47_i >>
                ‚Äòsatis M ((Œªn. x') x) t‚Äô by metis_tac[] >>
                ‚Äòfsatis (mm2folm M) (Œªn. x') (ST x t)‚Äô by fs[] >>
                ‚Äòfeval (mm2folm M) (Œªn. x') phi <=>
                 feval MA (Œªn. x') phi‚Äô
                  suffices_by metis_tac[fsatis_def] >>
                ‚Äò!phi. form_functions (ST x phi) = {}‚Äô
                  by metis_tac[ST_form_functions_EMPTY] >>
                ‚Äò!phi. form_functions phi = {} ==>
                       !M1 M2 œÉ. M1.Dom = M2.Dom /\
                                 M1.Pred = M2.Pred ==>
                                 (feval M1 œÉ phi <=> feval M2 œÉ phi)‚Äô
                  by metis_tac[form_functions_EMPTY_feval] >>
                ‚Äò(mm2folm M).Dom = MA.Dom‚Äô by fs[mm2folm_def,Abbr‚ÄòMA‚Äô] >>
                ‚Äò(mm2folm M).Pred = MA.Pred‚Äô by fs[mm2folm_def,Abbr‚ÄòMA‚Äô] >>
                metis_tac[]))) >>
  ‚ÄòFINITE {w}‚Äô by fs[] >>
  ‚ÄòCARD {w} <= 1‚Äô by fs[] >>
  ‚Äò{w} SUBSET (mm2folm M).Dom‚Äô by fs[SUBSET_DEF,mm2folm_def] >>
  ‚ÄòMA = expand (mm2folm M) {w} (\n.w)‚Äô
    by rw[expand_def,folModelsTheory.model_component_equality,mm2folm_def,
          Abbr‚ÄòMA‚Äô,FUN_EQ_THM]  >>
(*
`expansion (mm2folm M) {w} MA (\n.w)`
  by (rw[expansion_def] (* 4 *)
      >- fs[mm2folm_def,Abbr`MA`]
      >- fs[BIJ_DEF,INJ_DEF,SURJ_DEF,Abbr`MA`]
      >- (fs[BIJ_DEF,INJ_DEF,SURJ_DEF,Abbr`MA`] >> simp[FUN_EQ_THM] >> rw[] >>
          fs[])
      >- fs[mm2folm_def,Abbr`MA`]) >>*)
  ‚Äòftype x Œ£'‚Äô
    by (rw[ftype_def,SUBSET_DEF] >> fs[Abbr‚ÄòŒ£'‚Äô] (* 2 *)
        >- (‚ÄòFV (fR (Fn 0 []) (fV x)) = {x}‚Äô
              by rw[FV_def,FVT_def] >>
            ‚Äòx'' IN {x}‚Äô by metis_tac[] >> fs[])
        >- (‚ÄòFV (ST x x''') SUBSET {x}‚Äô by metis_tac[ST_FV_singleton] >>
            ‚Äòx'' IN {x}‚Äô by metis_tac[SUBSET_DEF] >> fs[])) >>
  ‚Äòfrealizes MA x Œ£'‚Äô
    by (rw[] >> first_x_assum irule >> rw[] (* 3 *)
        (*map_every qexists_tac [`{w}`,`\n.w`,`1`] >> rw[]*) (* 4 *)
        >- (Cases_on ‚Äòphi = fR (Fn 0 []) (fV x)‚Äô (* 2 *)
            >- fs[form_functions_def,FST] >>
            fs[Abbr‚ÄòŒ£'‚Äô] >>
            metis_tac[ST_form_functions_EMPTY,MEMBER_NOT_EMPTY,SUBSET_DEF])
        >- rw[SUBSET_DEF,mm2folm_def,IMAGE_DEF]
        >- rw[BIJ_DEF,INJ_DEF,SURJ_DEF]
       ) >>
  fs[frealizes_def] >>
  rw[satisfiable_in_def] (* 2 *)
  >- rw[SUBSET_DEF]
  >- (qexists_tac ‚Äòw'‚Äô >> rw[] (* 3 *)
      >- fs[expand_def,mm2folm_def]
      >- (‚Äò(fR (Fn 0 []) (fV x)) IN Œ£'‚Äô by fs[Abbr‚ÄòŒ£'‚Äô] >>
          ‚ÄòIMAGE (\n. w') univ(:num) ‚äÜ (expand (mm2folm M) {w} (Œªn. w)).Dom‚Äô
            by fs[SUBSET_DEF,IMAGE_DEF,expand_def,mm2folm_def] >>
          ‚Äòfsatis (expand (mm2folm M) {w} (Œªn. w)) ((x =+ w') (Œªn. w'))
                  (fR (Fn 0 []) (fV x))‚Äô
            by metis_tac[] >>
          fs[fsatis_def,feval_def,APPLY_UPDATE_THM,termval_def,expand_def,
             mm2folm_def])
      >- (‚ÄòIMAGE (\n. w') univ(:num) ‚äÜ (expand (mm2folm M) {w} (Œªn. w)).Dom‚Äô
            by fs[SUBSET_DEF,IMAGE_DEF,expand_def,mm2folm_def] >>
          ‚Äò(ST x form) IN Œ£'‚Äô by fs[Abbr‚ÄòŒ£'‚Äô] >>
          ‚Äòfsatis (expand (mm2folm M) {w} (Œªn. w)) ((x =+ w') (Œªn. w'))
                  (ST x form)‚Äô by metis_tac[] >>
          ‚Äò(IMAGE ((x =+ w') (Œªn. w')) univ(:num)) SUBSET M.frame.world‚Äô
            by (rw[IMAGE_DEF,SUBSET_DEF] >> Cases_on ‚Äòx'' = x‚Äô (* 2 *) >> rw[] >>
                fs[APPLY_UPDATE_THM,expand_def,mm2folm_def]) >>
          ‚Äòfsatis (mm2folm M) ((x =+ w') (Œªn. w')) (ST x form)‚Äô
            by (rw[fsatis_def] (* 2 *)
                >- (rw[mm2folm_def,valuation_def] >>
                    fs[SUBSET_DEF,IMAGE_DEF] >>
                    metis_tac[]) >>
                ‚Äòfeval (expand (mm2folm M) {w} (Œªn. w)) (Œªn. w')‚¶áx ‚Ü¶ w'‚¶à
                       (ST x form) <=>
                 feval (mm2folm M) (Œªn. w')‚¶áx ‚Ü¶ w'‚¶à (ST x form)‚Äô
                  suffices_by metis_tac[fsatis_def] >>
                irule holds_functions >> rw[] (* 3 *)
                >- (qpat_x_assum ‚Äò_ = expand _ {w} _‚Äô (assume_tac o SYM) >>
                    simp[])
                >- (‚Äòform_functions (ST x form) = {}‚Äô
                      suffices_by metis_tac[MEMBER_NOT_EMPTY] >>
                    metis_tac[L1tau_def,ST_L1tau])
                >- (qpat_x_assum ‚Äò_ = expand _ {w} _‚Äô (assume_tac o SYM) >>
                    simp[])) >>
          ‚Äò(x =+ w') (Œªn. w') x = w'‚Äô by fs[APPLY_UPDATE_THM] >>
          metis_tac[prop_2_47_i]))
QED

val thm_2_65_corollary = store_thm(
  "thm_2_65_corollary",
  ``‚àÄM M' w:'b w':'c.
       countably_saturated (mm2folm M) /\ countably_saturated (mm2folm M') ‚àß w ‚àà M.frame.world ‚àß w' ‚àà M'.frame.world ‚áí
       modal_eq M M' w w' ‚áí
       bisim_world M M' w w'``,
   rw[] >> `M_sat M /\ M_sat M'` by metis_tac[thm_2_65] >> metis_tac[prop_2_54_DIST_TYPE]);




Theorem thm_2_74_half1:
  !M N w v. w IN M.frame.world /\ v IN N.frame.world ==>
         !U I MS NS. ultrafilter U I /\
                     (!i. i IN I ==> MS i = M) /\
                     (!i. i IN I ==> NS i = N) ==>
               bisim_world (ultraproduct_model U I MS) (ultraproduct_model U I NS)
                           {fw | Uequiv U I (models2worlds MS) (Œªi. w) fw}
                           {fv | Uequiv U I (models2worlds NS) (Œªi. v) fv}
                   ==> (!phi. satis M w phi <=> satis N v phi)
Proof
  rw[] >> drule prop_2_71 >> rw[] >> last_x_assum (qspec_then `U` assume_tac) >>
  first_x_assum (qspecl_then [`phi`,`v`] assume_tac) >> first_x_assum drule >> rw[] >>
  `‚àÄphi w.
             satis (ultraproduct_model U I' MS)
               {fw | Uequiv U I' (models2worlds MS) (Œªi. w) fw} phi ‚áî
             satis M w phi` by metis_tac[prop_2_71] >>
  first_x_assum (qspecl_then [`phi`,`w`] assume_tac) >> drule thm_2_20_lemma >>
  metis_tac[]
QED


Theorem thm_2_74_half2:
  !(M: Œ± modalBasics$model) N w v. (w IN M.frame.world /\ v IN N.frame.world /\
            (!phi. satis M w phi <=> satis N v phi)) ==>
             ?U (I:num -> bool). ultrafilter U I /\
               bisim_world (ultraproduct_model U I (\i. M)) (ultraproduct_model U I (\i. N))
                           {fw | Uequiv U I (models2worlds (\i. M)) (Œªi. w) fw}
                           {fv | Uequiv U I (models2worlds (\i. N)) (Œªi. v) fv}
Proof
rw[] >>
`‚àÉU. ultrafilter U ùïå(:num) ‚àß ‚àÄs. FINITE s ‚áí s ‚àâ U`
  by metis_tac[exercise_2_5_4_b] >>
`!n. {n} NOTIN U` by fs[] >>
drule example_2_72 >> rw[] >>
map_every qexists_tac [`U`,`univ(:num)`] >> rw[] >>
irule thm_2_65_corollary >> rw[] (* 5 *)
>- (irule lemma_2_73 >> rw[] >> metis_tac[MEMBER_NOT_EMPTY])
>- (irule lemma_2_73 >> rw[] >> metis_tac[MEMBER_NOT_EMPTY])
>- (`!i. i IN ùïå(:num) ==> (\i. M) i = M` by fs[] >>
    `{fw | Uequiv U ùïå(:num) (models2worlds (Œªi. M)) (Œªi. w) fw} ‚àà
     (ultraproduct_model U ùïå(:num) (Œªi. M)).frame.world <=> w IN M.frame.world`
      suffices_by metis_tac[] >> irule ultraproduct_world_constant >> rw[])
>- (`!i. i IN ùïå(:num) ==> (\i. N) i = N` by fs[] >>
    `{fv | Uequiv U ùïå(:num) (models2worlds (Œªi. N)) (Œªi. v) fv} ‚àà
     (ultraproduct_model U ùïå(:num) (Œªi. N)).frame.world <=> v IN N.frame.world`
      suffices_by metis_tac[] >> irule ultraproduct_world_constant >> rw[])
>- (rw[modal_eq_tau] >>
    `!i. i IN ùïå(:num) ==> (\i. M) i = M` by fs[] >>
    drule prop_2_71 >> rw[] >>
    `!i. i IN ùïå(:num) ==> (\i. N) i = N` by fs[] >>
    drule prop_2_71 >> rw[])
QED

(*detour lemma 2.74 2.62*)


Theorem ST_CONJ:
ST x (AND f1 f2) = fAND (ST x f1) (ST x f2)
Proof
rw[ST_def,fAND_def,AND_def]
QED


Theorem ST_BIGCONJ:
!s.
   FINITE s ==>
    !x.
      (!f. f IN s ==> ?phi. f = ST x phi) ==>
       ?cf. (!M œÉ. IMAGE œÉ (univ(:num)) ‚äÜ M.Dom ==>
                  (feval M œÉ cf <=>
                   (!f. f IN s ==> feval M œÉ f))) /\
           ?psi. cf = ST x psi
Proof
Induct_on `FINITE` >> rw[] (* 2 *)
>- (qexists_tac `True` >> rw[True_def,fNOT_def,feval_def] >>
    qexists_tac `NOT FALSE` >> rw[ST_def,fNOT_def]) >>
`(‚àÄf. f ‚àà s ‚áí ‚àÉphi. f = ST x phi)` by metis_tac[] >>
first_x_assum drule >> rw[] >>
`‚àÉphi. e = ST x phi` by metis_tac[] >>
qexists_tac `fAND (ST x phi) (ST x psi)` >> rw[EQ_IMP_THM] (* 3 *)
>- rw[]
>- metis_tac[] >>
metis_tac[ST_CONJ]
QED

Theorem ST_fNOT:
ST x (NOT f) = fNOT (ST x f)
Proof
rw[ST_def,fNOT_def,Not_def]
QED


Theorem termval_IN_ultraproduct_Dom':
‚àÄU I MS.
    ultrafilter U I ‚áí
     (‚àÄn0 l0 i. i IN I ==> (MS i).Fun n0 l0 ‚àà (MS i).Dom) ==>
         ‚àÄœÉ.
             IMAGE œÉ ùïå(:num) ‚äÜ ultraproduct U I (folmodels2Doms MS) ‚áí
             ‚àÄa.
                 termval (ultraproduct_folmodel U I MS) œÉ a ‚àà
                 ultraproduct U I (folmodels2Doms MS)
Proof
rw[] >>
`ultraproduct U I' (folmodels2Doms MS) =
 (ultraproduct_folmodel U I' MS).Dom`
 by fs[ultraproduct_folmodel_def] >>
rw[] >> irule termval_IN_Dom >> rw[] (* 2 *)
>- metis_tac[ultraproduct_folmodel_well_formed] >>
fs[ultraproduct_folmodel_def]
QED

Theorem folmodels2Doms_models2worlds_folm2mm:
!MS. (folmodels2Doms MS) = (models2worlds (Œªi. folm2mm (MS i)))
Proof
rw[folmodels2Doms_def,models2worlds_def,folm2mm_def,FUN_EQ_THM]
QED


Theorem ultraproduct_comm_termval':
  !t U I MS. ultrafilter U I ==> term_functions t = {} ==>
      !œÉ. (termval (ultraproduct_folmodel U I MS) œÉ t =
           termval (mm2folm (ultraproduct_model U I (Œªi. folm2mm (MS i)))) œÉ t)
Proof
 Cases_on `t` >> rw[termval_def]
QED


Theorem ultraproduct_comm_feval':
!phi U I MS.
  ultrafilter U I ==>
  form_functions phi = {} ==>
  (!i n. i IN I ==> (MS i).Pred n [] = F) ==>
  (!i a b n. i IN I ==> (MS i).Pred n [a; b] ==> n = 0) ==>
  (!i a b c d n. i IN I ==> (MS i).Pred n (a:: b :: c :: d) = F) ==>
  (‚àÄn0 l0 i. i IN I ==> (MS i).Fun n0 l0 ‚àà (MS i).Dom) ==>
  !œÉ.
     IMAGE œÉ (univ(:num)) ‚äÜ ultraproduct U I (folmodels2Doms MS) ==>
     (feval (ultraproduct_folmodel U I MS) œÉ phi <=>
      feval (mm2folm (ultraproduct_model U I (Œªi. folm2mm (MS i)))) œÉ phi)
Proof
Induct_on `phi` (* 4 *)
>- fs[feval_def]
>- (rw[feval_def] >>
    `MAP (termval (ultraproduct_folmodel U I' MS) œÉ) l =
     MAP (termval
           (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))) œÉ) l`
     by
      (irule MAP_CONG >> rw[] >> irule ultraproduct_comm_termval' >> rw[] >>
       SPOSE_NOT_THEN ASSUME_TAC >> fs[GSYM MEMBER_NOT_EMPTY] >>
       `x' IN LIST_UNION (MAP term_functions l)`
         suffices_by metis_tac[MEMBER_NOT_EMPTY] >>
       simp[IN_LIST_UNION] >> qexists_tac `term_functions x` >>
       rw[MEM_MAP] >> metis_tac[]) >>
    rw[] >>
    qabbrev_tac
      `mapl =
        MAP (termval
             (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))) œÉ) l` >>
    Cases_on `mapl = []` (* 2 *)
    >- (fs[] >>
        rw[mm2folm_def,ultraproduct_folmodel_def,
           folm2mm_def,ultraproduct_model_def] >>
        `{i | i ‚àà I' ‚àß (MS i).Pred n []} = {}`
          suffices_by metis_tac[EMPTY_NOTIN_ultrafilter] >>
        rw[Once EXTENSION] >> metis_tac[])
    >- (`(?a. l = [a]) \/
         (?a b. l = [a;b]) \/
         (?a b c d. l = a :: b :: c :: d)`
          by
           (Cases_on `l` >> fs[Abbr‚Äòmapl‚Äô] >>
            Cases_on `t` >> fs[] >> Cases_on `t'` >> fs[]) (* 3 *)
        >- (rw[] >>
            qabbrev_tac
             `sl = termval (ultraproduct_folmodel U I' MS) œÉ a` >>
            rw[mm2folm_def,
               ultraproduct_folmodel_def,ultraproduct_model_def] >>
            `sl ‚àà ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i)))`
             by
              (rw[Abbr`sl`] >> drule termval_IN_ultraproduct_Dom' >>
               rw[] >>
               metis_tac[folmodels2Doms_models2worlds_folm2mm]) >>
            (*remove the conj first*)
           `sl <> {}` by metis_tac[ultraproduct_eqclass_non_empty] >>
           `CHOICE sl IN sl` by metis_tac[CHOICE_DEF] >>
           `{i | i ‚àà I' ‚àß (MS i).Pred n [CHOICE sl i]} =
            {i | i ‚àà I' ‚àß CHOICE sl i ‚àà (folm2mm (MS i)).valt n}`
             by (rw[EXTENSION,EQ_IMP_THM,folm2mm_def] >>
                 drule ultraproduct_val_IN_A >> rw[] >>
                 first_x_assum
                   (qspecl_then [`models2worlds (Œªi. folm2mm (MS i))`,
                                 `sl`,`CHOICE sl`,`x`] assume_tac) >>
                 `(models2worlds (Œªi. folm2mm (MS i))) x = (MS x).Dom`
                   by rw[models2worlds_def,folm2mm_def] >>
                 fs[]) >>
           rw[EQ_IMP_THM] >- metis_tac[] >>
           `{i | i IN I' /\ f i = (CHOICE sl) i} IN U`
             by
              (irule ultraproduct_same_eqclass >> rw[] >>
               map_every qexists_tac
                [`models2worlds (Œªi. folm2mm (MS i))`,`sl`] >>
               rw[]) >>
           `({i | i ‚àà I' ‚àß f i ‚àà (folm2mm (MS i)).valt n} ‚à©
             {i | i ‚àà I' ‚àß f i = CHOICE sl i}) IN U`
             by metis_tac[ultrafilter_INTER] >>
           irule ultrafilter_SUBSET' >> rw[PULL_EXISTS] (* 2 *)
           >- (qexists_tac
                 `{i | i ‚àà I' ‚àß f i ‚àà (folm2mm (MS i)).valt n} ‚à©
                  {i | i ‚àà I' ‚àß f i = CHOICE sl i}` >>
               rw[SUBSET_DEF] >> metis_tac[]) >>
           qexists_tac `I'` >> rw[SUBSET_DEF]
           ) (*1 out of 3*)
        >- (rw[] >>
            qabbrev_tac
             `sl1 = termval (ultraproduct_folmodel U I' MS) œÉ a` >>
            qabbrev_tac
             `sl2 = termval (ultraproduct_folmodel U I' MS) œÉ b` >>
            rw[mm2folm_def,ultraproduct_folmodel_def,ultraproduct_model_def] >>
            `{i | i ‚àà I' ‚àß (MS i).Pred n [CHOICE sl1 i; CHOICE sl2 i]} ‚àà U ==>
             n = 0`
              by
               (rw[] >> SPOSE_NOT_THEN ASSUME_TAC >>
                `{i | i ‚àà I' ‚àß (MS i).Pred n [CHOICE sl1 i; CHOICE sl2 i]} = {}`
                  by
                   (rw[EXTENSION] >> metis_tac[]) >>
                metis_tac[EMPTY_NOTIN_ultrafilter]) >>
            `sl1 ‚àà ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i))) ‚àß
             sl2 ‚àà ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i)))`
              by
               (`!t. (termval (ultraproduct_folmodel U I' MS) œÉ t) IN
                 ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i)))`
                  suffices_by metis_tac[] >>
                drule termval_IN_ultraproduct_Dom' >>
                rw[] >>
                metis_tac[folmodels2Doms_models2worlds_folm2mm]) >>
            `sl1 <> {}` by metis_tac[ultraproduct_eqclass_non_empty] >>
            `sl2 <> {}` by metis_tac[ultraproduct_eqclass_non_empty] >>
            `CHOICE sl1 IN sl1 /\ CHOICE sl2 IN sl2` by metis_tac[CHOICE_DEF]>>
            rw[EQ_IMP_THM,EXTENSION] (* 2 *)
            >- (map_every qexists_tac [`CHOICE sl1`,`CHOICE sl2`] >>
                rw[] >>
                `n = 0` by metis_tac[] >>
                `!i. i IN I' ==> CHOICE sl1 i ‚àà (MS i).Dom /\
                 CHOICE sl2 i ‚àà (MS i).Dom`
                  by
                   (drule ultraproduct_val_IN_A >>
                    `!x. models2worlds (Œªi. folm2mm (MS i)) x = (MS x).Dom`
                      by rw[models2worlds_def,folm2mm_def] >>
                    metis_tac[CHOICE_DEF,ultraproduct_eqclass_non_empty]) >>
                rw[folm2mm_def] >>
                `{i | i ‚àà I' ‚àß (MS i).Pred 0 [CHOICE sl1 i; CHOICE sl2 i]} =
                 {i | i ‚àà I' ‚àß (MS i).Pred 0 [CHOICE sl1 i; CHOICE sl2 i] ‚àß
                   CHOICE sl1 i ‚àà (MS i).Dom ‚àß CHOICE sl2 i ‚àà (MS i).Dom}`
                  by rw[EXTENSION,EQ_IMP_THM] >>
                metis_tac[]) >>
            qmatch_abbrev_tac `ss IN U` >>
            irule ultrafilter_INTER_INTER_SUBSET >>
            `ss ‚äÜ I'` by fs[Abbr`ss`,SUBSET_DEF,INTER_DEF] >> rw[] (* 2 *)
            >- (map_every qexists_tac
                 [`{i | i IN I' /\ f i = (CHOICE sl1) i}`,
                  `{i | i IN I' /\ g i = (CHOICE sl2) i}`,
                  `{i | i ‚àà I' ‚àß (folm2mm (MS i)).frame.rel (f i) (g i)}`] >>
                rw[SUBSET_DEF,folm2mm_def] (* 3 *)
                >- (irule ultraproduct_same_eqclass >> rw[] >>
                    map_every qexists_tac
                    [`models2worlds (Œªi. folm2mm (MS i))`,`sl1`] >>
                    rw[])
                >- (irule ultraproduct_same_eqclass >> rw[] >>
                    map_every qexists_tac
                    [`models2worlds (Œªi. folm2mm (MS i))`,`sl2`] >>
                    rw[]) >>
                fs[Abbr`ss`] >> metis_tac[]) >>
            qexists_tac `I'` >> rw[SUBSET_DEF])
        >- (`(mm2folm
              (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Pred n mapl = F`
              by rw[mm2folm_def] >>
            `(ultraproduct_folmodel U I' MS).Pred n mapl = F`
              by
              (`{i | i ‚àà I' ‚àß (MS i).Pred n (MAP (Œªfc. CHOICE fc i) mapl)} NOTIN
                  U`
                 suffices_by fs[ultraproduct_folmodel_def] >>
               `{i | i ‚àà I' ‚àß (MS i).Pred n (MAP (Œªfc. CHOICE fc i) mapl)} = {}`
                 suffices_by metis_tac[EMPTY_NOTIN_ultrafilter] >>
               rw[Once EXTENSION] >> metis_tac[]) >>
            metis_tac[])
    )
   )
>- (rw[] >> metis_tac[])
>- (rw[feval_def,EQ_IMP_THM] (* 2 *)
    >- (first_x_assum drule >> rw[] >>
        `IMAGE œÉ‚¶án ‚Ü¶ a‚¶à ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms MS)`
          by (irule IMAGE_UPDATE >>
              `(mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Dom =
               ultraproduct U I' (folmodels2Doms MS)`
               by
                (rw[mm2folm_def,ultraproduct_model_def] >>
                 `(models2worlds (Œªi. folm2mm (MS i))) = (folmodels2Doms MS)`
                   suffices_by metis_tac[] >>
                 rw[FUN_EQ_THM,models2worlds_def,
                    folm2mm_def,folmodels2Doms_def]) >>
              metis_tac[]) >>
        first_x_assum drule >> rw[] >>
        `(ultraproduct_folmodel U I' MS).Dom =
         (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Dom`
          suffices_by metis_tac[] >>
        rw[ultraproduct_folmodel_def,mm2folm_def,ultraproduct_model_def] >>
        metis_tac[folmodels2Doms_models2worlds_folm2mm])
    >- (first_x_assum drule >> rw[] >>
        `IMAGE œÉ‚¶án ‚Ü¶ a‚¶à ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms MS)`
          by (irule IMAGE_UPDATE >> rw[] >> fs[ultraproduct_folmodel_def]) >>
        `(ultraproduct_folmodel U I' MS).Dom =
         (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Dom`
          suffices_by metis_tac[] >>
        rw[ultraproduct_folmodel_def,mm2folm_def,ultraproduct_model_def] >>
        metis_tac[folmodels2Doms_models2worlds_folm2mm])
    )
QED



Theorem detour_embedding_lemma:
!M œÉ a I U x MS.
   (FV a ‚äÜ {x} /\ form_functions a = ‚àÖ /\
    ultrafilter U I /\
    (‚àÄff ll. M.Fun ff ll ‚àà M.Dom) /\
    (‚àÄn. M.Pred n [] ‚áî F) /\
    (‚àÄa b n. M.Pred n [a; b] ‚áí n = 0) /\
    (‚àÄa b c d n. (M.Pred n (a::b::c::d) ‚áî F)) /\
    IMAGE œÉ (univ(:num)) ‚äÜ M.Dom) ==>
    (feval M œÉ a <=>
     feval (mm2folm (ultraproduct_model U I (Œªi. folm2mm M)))
       (Œªx. {fw | Uequiv U I (models2worlds (Œªi. folm2mm M)) (Œªi. œÉ x) fw}) a)
Proof
rw[] >>
drule (corollary_A_21 |> INST_TYPE [alpha |-> ``:'b``,beta |-> ``:'a``]) >>
rw[] >>
first_x_assum
  (qspecl_then [`\i.M`,`M`,`œÉ`,`a`] assume_tac) >>
fs[] >>
`(‚àÄi ff ll. i ‚àà I' ‚áí M.Fun ff ll ‚àà M.Dom)` by metis_tac[] >>
first_x_assum drule_all >> rw[] >>
drule
  (ultraproduct_comm_feval'|> INST_TYPE [alpha |-> ``:'b``,beta |-> ``:'a``])>>
rw[] >>
first_x_assum
  (qspecl_then
    [`a`,`\i.M`,
     `(Œªx. {g | Uequiv U I' (folmodels2Doms (Œªi. M)) g (Œªi. œÉ x)})`]
   assume_tac) >>
rfs[] >>
`IMAGE (Œªx. {g | Uequiv U I' (folmodels2Doms (Œªi. M)) g (Œªi. œÉ x)})
          ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms (Œªi. M))`
  by
   (rw[SUBSET_DEF,ultraproduct_def,partition_def] >>
    qexists_tac `\i. œÉ x''` >>
    rw[] (* 2 *)
    >- (rw[Cart_prod_def,folmodels2Doms_def] >>
        fs[IMAGE_DEF,SUBSET_DEF] >> metis_tac[])
    >- (rw[EXTENSION,Uequiv_def,EQ_IMP_THM] (* 2 same *) >>
        `{i | i ‚àà I' ‚àß x' i = œÉ x''} =
         {i | i ‚àà I' ‚àß œÉ x'' = x' i}`
          by (rw[EXTENSION,EQ_IMP_THM] >> metis_tac[]) >>
        metis_tac[])
   ) >>
fs[] >>
`(models2worlds (Œªi. folm2mm M)) = (folmodels2Doms (Œªi. M))`
  by
   rw[FUN_EQ_THM,models2worlds_def,folmodels2Doms_def,folm2mm_def] >>
rw[] >>
`(Œªx. {g | Uequiv U I' (folmodels2Doms (Œªi. M)) g (Œªi. œÉ x)}) =
 (Œªx'. {fw | Uequiv U I' (folmodels2Doms (Œªi. M)) (Œªi. œÉ x') fw})`
  by
   (rw[FUN_EQ_THM,EQ_IMP_THM] (* 2 same *) >>
    qexists_tac `x''` >> rw[] >> metis_tac[Uequiv_SYM]) >>
rw[] >>
`(‚àÄi a b n. i ‚àà I' ‚áí M.Pred n [a; b] ‚áí n = 0)`
  by metis_tac[] >>
first_x_assum drule >> rw[]
QED

Theorem mm2folm_folm2mm_termval:
!t.
  term_functions t = {} ==>
   !œÉ.
      IMAGE œÉ univ(:num) ‚äÜ M.Dom ==>
       termval (mm2folm (folm2mm M)) œÉ t = termval M œÉ t
Proof
 rw[] >> Cases_on `t` >> fs[term_functions_def] >> rw[termval_def,mm2folm_def,folm2mm_def]
QED

Theorem mm2folm_folm2mm_feval:
‚àÄf. form_functions f = ‚àÖ ‚áí
  ‚àÄœÉ. IMAGE œÉ ùïå(:num) ‚äÜ M.Dom ‚áí
      (‚àÄn. M.Pred n [] ‚áî F) ==>
      (‚àÄa b n. M.Pred n [a; b] ‚áí n = 0) ==>
      (‚àÄa b c d n. (M.Pred n (a::b::c::d) ‚áî F)) ==>
           (feval (mm2folm (folm2mm M)) œÉ f ‚áî feval M œÉ f)
Proof
Induct_on `f` (* 4 *)
>- rw[feval_def]
>- (rw[feval_def] >>
    qabbrev_tac `tv = (termval (mm2folm (folm2mm M)) œÉ)` >>
    rw[mm2folm_def,folm2mm_def] >> Cases_on `l` (*2 *)
    >- fs[] >>
    Cases_on `t` (*2 *)
    >- (fs[] >> Cases_on `h` >> fs[term_functions_def] >>
        rw[Abbr`tv`,mm2folm_folm2mm_termval] >>
        fs[IMAGE_DEF,SUBSET_DEF] >> metis_tac[]) >>
    fs[] >>
    Cases_on `t'` (* 2 *)
    >- (fs[] >> rw[EQ_IMP_THM] (* 7 *)
        >- (fs[Abbr`tv`,mm2folm_folm2mm_termval] >>
            metis_tac[mm2folm_folm2mm_termval])
        >- metis_tac[]
        >- (fs[Abbr`tv`,mm2folm_folm2mm_termval] >>
            metis_tac[mm2folm_folm2mm_termval])
        >- (Cases_on `h` >>
            fs[term_functions_def,Abbr`tv`,IMAGE_DEF,SUBSET_DEF] >>
            metis_tac[])
        >- (Cases_on `h'` >>
            fs[term_functions_def,Abbr`tv`,IMAGE_DEF,SUBSET_DEF] >>
            metis_tac[])
        >- (Cases_on `h` >>
            fs[term_functions_def,Abbr`tv`,IMAGE_DEF,SUBSET_DEF] >>
            metis_tac[])
        >- (Cases_on `h'` >>
            fs[term_functions_def,Abbr`tv`,IMAGE_DEF,SUBSET_DEF] >>
            metis_tac[])) >>
    fs[])
>- (rw[feval_def] >> metis_tac[]) >>
rw[feval_def,EQ_IMP_THM]
>- (`(mm2folm (folm2mm M)).Dom = M.Dom` by fs[mm2folm_def,folm2mm_def] >>
    first_x_assum drule >> rw[] >>
    `IMAGE œÉ(|n |-> a|) ùïå(:num) ‚äÜ M.Dom`
      by (irule IMAGE_UPDATE >> rw[]) >>
    metis_tac[]) >>
`(mm2folm (folm2mm M)).Dom = M.Dom` by fs[mm2folm_def,folm2mm_def] >>
`IMAGE œÉ(|n |-> a|) ùïå(:num) ‚äÜ M.Dom`
  by (irule IMAGE_UPDATE >> fs[]) >>
metis_tac[]
QED

Theorem ultraproduct_mm2folm_folm2mm_comm_feval:
!M œÉ a I U.
   (FV a ‚äÜ {x} /\ form_functions a = ‚àÖ /\
    ultrafilter U I /\
    (‚àÄn. ¬¨M.Pred n []) /\
    (‚àÄa b n. M.Pred n [a; b] ‚áí n = 0) /\
    (‚àÄa b c d n. ¬¨M.Pred n (a::b::c::d)) /\
    (‚àÄff ll. M.Fun ff ll ‚àà M.Dom) /\
    IMAGE œÉ (univ(:num)) ‚äÜ M.Dom) ==>
    (feval M œÉ a <=>
     feval (mm2folm (ultraproduct_model U I (Œªi. folm2mm M)))
       (Œªx. {fw | Uequiv U I (models2worlds (Œªi. folm2mm M)) (Œªi. œÉ x) fw}) a)
Proof
rw[] >>
drule
 (ultraproduct_comm_feval'|> INST_TYPE [alpha |-> ``:'b``,beta |-> ``:'a``])>>
rw[] >>
drule (corollary_A_21 |> INST_TYPE [alpha |-> ``:'b``,beta |-> ``:'a``]) >> rw[] >>
(*apply A_21*)
first_x_assum (qspecl_then [`\i.M`,`M`,`œÉ`,`a`] assume_tac) >> fs[] >>
last_x_assum
(qspecl_then
  [`a`,`\i.M`,
   `(Œªx. {g | Uequiv U I' (folmodels2Doms (Œªi. M)) g (Œªi. œÉ x)}) `]
 assume_tac) >>
`IMAGE (Œªx. {g | Uequiv U I' (folmodels2Doms (Œªi. M)) g (Œªi. œÉ x)})
          ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms (Œªi. M))`
  by
   (rw[IMAGE_DEF,SUBSET_DEF,ultraproduct_def,partition_def,Cart_prod_def] >>
    qexists_tac `\i. œÉ x''` >>
    rw[Uequiv_def,EXTENSION,EQ_IMP_THM,folmodels2Doms_def,Cart_prod_def] >>
    fs[] (* 7 *)
    >- (fs[IMAGE_DEF,SUBSET_DEF] >> metis_tac[])
    >- metis_tac[]
    >- (fs[IMAGE_DEF,SUBSET_DEF] >> metis_tac[])
    >- (`{i | i ‚àà I' ‚àß x' i = œÉ x''} = {i | i ‚àà I' ‚àß œÉ x'' = x' i}`
         by rw[EXTENSION,EQ_IMP_THM] >> metis_tac[])
    >- metis_tac[]
    >- (fs[IMAGE_DEF,SUBSET_DEF] >> metis_tac[])
    >- (`{i | i ‚àà I' ‚àß x' i = œÉ x''} = {i | i ‚àà I' ‚àß œÉ x'' = x' i}`
         by rw[EXTENSION,EQ_IMP_THM] >> metis_tac[])
    ) >>
`form_functions a = ‚àÖ ‚àß (‚àÄi n. i ‚àà I' ‚áí ¬¨M.Pred n []) ‚àß
        (‚àÄi a b n. i ‚àà I' ‚áí M.Pred n [a; b] ‚áí n = 0) ‚àß
        (‚àÄi a b c d n. i ‚àà I' ‚áí ¬¨M.Pred n (a::b::c::d)) ‚àß
        (‚àÄn0 l0 i. i ‚àà I' ‚áí M.Fun n0 l0 ‚àà M.Dom) ‚àß
        IMAGE (Œªx. {g | Uequiv U I' (folmodels2Doms (Œªi. M)) g (Œªi. œÉ x)})
          ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms (Œªi. M))`
  by metis_tac[] >>
first_x_assum drule >> rw[] >>
first_x_assum drule >> rw[] >>
irule holds_valuation >> rw[] >>
`x' = x` by fs[SUBSET_DEF] >> fs[] >>
`(folmodels2Doms (Œªi. M)) = (models2worlds (Œªi. folm2mm M))`
  by rw[folmodels2Doms_def,models2worlds_def,folm2mm_def,FUN_EQ_THM] >>
rw[EXTENSION,EQ_IMP_THM] >> metis_tac[Uequiv_SYM]
QED



Theorem mm2folm_folm2mm_Pred0:
!M wl.
    (LENGTH wl = 2 /\
        (!w. MEM w wl ==> w IN M.Dom)) ==>
      (mm2folm (folm2mm M)).Pred 0 wl = M.Pred 0 wl
Proof
rw[FUN_EQ_THM,mm2folm_def,folm2mm_def] >>
`?w1 w2. wl = [w1;w2]`
  by (Cases_on `wl` >> fs[LENGTH] >> Cases_on `t` >> fs[LENGTH]) >>
fs[]
QED

Theorem mm2folm_folm2mm_Predn:
!M w n. w IN M.Dom ==>
  (mm2folm (folm2mm M)).Pred n [w] = M.Pred n [w]
Proof
rw[FUN_EQ_THM,mm2folm_def,folm2mm_def]
QED

Theorem mm2folm_folm2mm_term_functions:
!M v a. term_functions a = {} ==>
      termval (mm2folm (folm2mm M)) v a = termval M v a
Proof
rw[term_functions_def,termval_def,mm2folm_def,folm2mm_def] >>
Cases_on `a` >> fs[term_functions_def]
QED

Theorem valuation_termval_functions:
!M t v. (term_functions t = {} /\ valuation M v) ==>
      (termval M v t) IN M.Dom
Proof
rw[] >> Cases_on `t` >> fs[valuation_def,termval_def]
QED

Theorem L1tau_fIMP:
!f1 f2. L1tau (f1 -> f2) <=> (L1tau f1 /\ L1tau f2)
Proof
rw[L1tau_def] >> rw[EQ_IMP_THM]
QED

Theorem L1tau_FALL:
!f n. L1tau (FALL n f) <=> L1tau f
Proof
rw[L1tau_def] >> rw[EQ_IMP_THM]
QED

Theorem L1tau_mm2folm_folm2mm_comm_feval:
‚àÄf. L1tau f ==>
    !M v. valuation M v ==>
          (feval (mm2folm (folm2mm M)) v f ‚áî feval M v f)
Proof
Induct_on `f` (* 4 *)
>- rw[feval_def]
>- (rw[feval_def] >> fs[L1tau_def] (* 2 *)
    >- (`?a b. l = [a;b]`
        by (Cases_on `l` >> fs[LENGTH] >> Cases_on `t` >> fs[]) >>
       fs[] >> rw[mm2folm_folm2mm_term_functions] >>
       `(termval M v a) IN M.Dom /\ (termval M v b) IN M.Dom`
         by metis_tac[valuation_termval_functions] >>
       irule mm2folm_folm2mm_Pred0 >> fs[] >> metis_tac[])
    >- (`?a. l = [a]` by (Cases_on `l` >> fs[LENGTH]) >>
       fs[] >> rw[mm2folm_folm2mm_term_functions] >>
       irule mm2folm_folm2mm_Predn >>
       metis_tac[valuation_termval_functions])
   )
>- fs[feval_def,L1tau_fIMP]
>- (rw[feval_def,L1tau_FALL] >> first_x_assum drule >> rw[] >>
   `(mm2folm (folm2mm M)).Dom = M.Dom` by fs[mm2folm_def,folm2mm_def] >>
   fs[])
QED


Theorem L1tau_ultraproduct_mm2folm_folm2mm_comm_feval:
‚àÄM œÉ a I U.
            L1tau a ‚àß FV a ‚äÜ {x} ‚àß ultrafilter U I ‚àß valuation M œÉ ‚áí
            (feval M œÉ a ‚áî
             feval (mm2folm (ultraproduct_model U I (Œªi. folm2mm M)))
               (Œªx.
                    {fw |
                     Uequiv U I (models2worlds (Œªi. folm2mm M)) (Œªi. œÉ x) fw})
               a)
Proof
rw[] >>
`feval M œÉ a <=> feval (mm2folm (folm2mm M)) œÉ a`
     by metis_tac[L1tau_mm2folm_folm2mm_comm_feval] >>
qabbrev_tac `N = (mm2folm (folm2mm M))` >>
`feval N œÉ a <=>
 feval (mm2folm (ultraproduct_model U I' (Œªi. folm2mm N)))
          (Œªx.
               {fw | Uequiv U I' (models2worlds (Œªi. folm2mm N)) (Œªi. œÉ x) fw})
          a`
   by
    (irule ultraproduct_mm2folm_folm2mm_comm_feval >> rw[] (* 7 *)
     >- fs[Abbr`N`,mm2folm_def,folm2mm_def]
     >- fs[Abbr`N`,mm2folm_def,folm2mm_def]
     >- (fs[Abbr`N`,mm2folm_def,folm2mm_def,valuation_def] >>
         `M.Dom <> {}` suffices_by metis_tac[CHOICE_DEF] >>
         metis_tac[MEMBER_NOT_EMPTY])
     >- fs[Abbr`N`,mm2folm_def,folm2mm_def]
     >- fs[L1tau_def]
     >- (fs[valuation_def,IMAGE_DEF,SUBSET_DEF,Abbr`N`,mm2folm_def,folm2mm_def]
         >> metis_tac[])
     >- metis_tac[]) >>
`feval (mm2folm (ultraproduct_model U I' (Œªi. folm2mm N)))
          (Œªx.
               {fw | Uequiv U I' (models2worlds (Œªi. folm2mm N)) (Œªi. œÉ x) fw})
          a <=>
 feval (mm2folm (ultraproduct_model U I' (Œªi. folm2mm M)))
          (Œªx.
               {fw | Uequiv U I' (models2worlds (Œªi. folm2mm M)) (Œªi. œÉ x) fw})
          a` suffices_by metis_tac[] >>
rw[Abbr`N`] >>
qabbrev_tac `MS = \i. (mm2folm (folm2mm M))` >>
`feval
        (ultraproduct_folmodel U I' MS)
           (Œªx.
               {fw |
                Uequiv U I'
                  (models2worlds (Œªi. folm2mm (mm2folm (folm2mm M))))
                  (Œªi. œÉ x) fw}) a <=>
 feval
          (mm2folm
             (ultraproduct_model U I' (Œªi. folm2mm (MS i))))
          (Œªx.
               {fw |
                Uequiv U I'
                  (models2worlds (Œªi. folm2mm (mm2folm (folm2mm M))))
                  (Œªi. œÉ x) fw}) a`
  by
    (irule ultraproduct_comm_feval' >> rw[] (* 6 *)
     >- fs[Abbr`MS`,mm2folm_def,folm2mm_def]
     >- fs[Abbr`MS`,mm2folm_def,folm2mm_def]
     >- fs[Abbr`MS`,mm2folm_def,folm2mm_def]
     >- (fs[Abbr`MS`,mm2folm_def,folm2mm_def] >>
        `M.Dom <> {}` suffices_by metis_tac[CHOICE_DEF] >>
        fs[valuation_def] >> metis_tac[MEMBER_NOT_EMPTY])
     >- fs[L1tau_def]
     >- (rw[IMAGE_DEF,SUBSET_DEF,ultraproduct_def,folmodels2Doms_def,
            partition_def,Cart_prod_def] >>
         qexists_tac `(Œªi. œÉ x'')` >> rw[] (* 2 *)
         >- fs[Abbr`MS`,mm2folm_def,folm2mm_def,valuation_def]
         >- (`(models2worlds (Œªi. folm2mm (mm2folm (folm2mm M)))) =
              (Œªi. (MS i).Dom)`
              by
               (rw[models2worlds_def,Abbr`MS`,folm2mm_def,mm2folm_def]) >>
             fs[] >>
             rw[EQ_IMP_THM,EXTENSION,Uequiv_def] >>
             fs[Cart_prod_def]))) >>
qabbrev_tac `MS' = \i. (folm2mm M)` >>
`feval (mm2folm (ultraproduct_model U I' MS'))
          (Œªx.
               {fw |
                Uequiv U I'
                  (models2worlds (Œªi. folm2mm (mm2folm (folm2mm M))))
                  (Œªi. œÉ x) fw}) a <=>
   feval (ultraproduct_folmodel U I' (Œªi. mm2folm (MS' i)))
          (Œªx.
               {fw |
                Uequiv U I'
                  (models2worlds (Œªi. folm2mm (mm2folm (folm2mm M))))
                  (Œªi. œÉ x) fw}) a`
    by
     (irule ultraproduct_comm_feval >>
      `(models2worlds (Œªi. folm2mm (mm2folm (folm2mm M)))) =
              (Œªi. (MS i).Dom)`
        by (rw[models2worlds_def,Abbr`MS`,folm2mm_def,mm2folm_def]) >>
      fs[] >>
      rw[EQ_IMP_THM,EXTENSION,Uequiv_def] >>
      fs[Cart_prod_def] (* 2 *)
      >- fs[L1tau_def,MEMBER_NOT_EMPTY] >>
      rw[IMAGE_DEF,SUBSET_DEF,ultraproduct_def,Cart_prod_def,partition_def] >>
      qexists_tac `\i. œÉ x''` >> rw[] (* 2 *)
      >- fs[models2worlds_def,valuation_def,Abbr`MS'`,folm2mm_def] >>
      rw[EXTENSION,EQ_IMP_THM] (* 6 *)
      >- fs[models2worlds_def,Abbr`MS'`,folm2mm_def,Abbr`MS`,mm2folm_def]
      >- (rw[Uequiv_def] (* 3 *)
         >- (fs[Abbr`MS'`,folm2mm_def,
             models2worlds_def,valuation_def,GSYM MEMBER_NOT_EMPTY] >>
             metis_tac[])
         >>(rw[Cart_prod_def,models2worlds_def,Abbr`MS'`,folm2mm_def] >>
             fs[Abbr`MS`,folm2mm_def,mm2folm_def] >> metis_tac[]))
      >- (`(MS i).Dom = M.Dom` by fs[Abbr`MS`,folm2mm_def,mm2folm_def] >>
          `models2worlds MS' i = M.Dom`
           by fs[Abbr`MS'`,folm2mm_def,models2worlds_def] >>
          metis_tac[])
      >- (`(MS i).Dom = M.Dom` by fs[Abbr`MS`,folm2mm_def,mm2folm_def] >>
          fs[valuation_def])
      >- (`(MS i).Dom = M.Dom` by fs[Abbr`MS`,folm2mm_def,mm2folm_def] >>
          `models2worlds MS' i = M.Dom`
           by fs[Abbr`MS'`,folm2mm_def,models2worlds_def] >>
          metis_tac[])
      >- fs[Uequiv_def]) >>
fs[Abbr`MS`,Abbr`MS'`] >>
`feval M œÉ a <=> feval (mm2folm (ultraproduct_model U I' (Œªi. folm2mm M)))
          (Œªx.
               {fw |
                Uequiv U I'
                  (models2worlds (Œªi. folm2mm (mm2folm (folm2mm M))))
                  (Œªi. œÉ x) fw}) a` by metis_tac[] >>
`(models2worlds (Œªi. folm2mm (mm2folm (folm2mm M)))) =
 (models2worlds (Œªi. folm2mm M))`
   suffices_by (rw[] >> fs[]) >>
fs[models2worlds_def,folm2mm_def,mm2folm_def]
QED

val invar4bisim_def = Define`
  invar4bisim x (t1: Œº itself) (t2: ŒΩ itself) phi <=>
     (FV phi ‚äÜ {x} /\ L1tau phi /\
     !(M:Œº modalBasics$model) (N:ŒΩ modalBasics$model) v w.
        bisim_world M N (w:Œº) (v:ŒΩ) ==>
           (!(œÉm: num -> Œº) (œÉn: num -> ŒΩ).
             (valuation (mm2folm M) œÉm /\ valuation (mm2folm N) œÉn) ==>
                    (fsatis (mm2folm M) œÉm(|x |-> w|) phi <=>
                    fsatis (mm2folm N) œÉn(|x |-> v|) phi )))`

Theorem invar4bisim_def':
 ‚àÄx phi.
            invar4bisim x (:Œ±) (:Œ≤) phi ‚áî
            FV phi ‚äÜ {x} ‚àß L1tau phi ‚àß
            ‚àÄM N v:Œ≤ w:Œ±.
                bisim_world M N w v ‚áí
                    (fsatis (mm2folm M) (\n.w) phi ‚áî
                     fsatis (mm2folm N) (\n.v) phi)
Proof
rw[invar4bisim_def,Once EQ_IMP_THM] (* 2 *)
>- (`valuation (mm2folm M) (Œªn:num. w) ‚àß valuation (mm2folm N) (Œªn:num. v)`
      by fs[valuation_def,bisim_world_def,mm2folm_def] >>
    `(fsatis (mm2folm M) (Œªn. w)‚¶áx ‚Ü¶ w‚¶à phi ‚áî
                 fsatis (mm2folm N) (Œªn. v)‚¶áx ‚Ü¶ v‚¶à phi)` by metis_tac[] >>
    `(Œªn. w)‚¶áx ‚Ü¶ w‚¶à = (Œªn. w) /\ (Œªn. v)‚¶áx ‚Ü¶ v‚¶à = (Œªn. v)` by simp[] >>
    ntac 2 (pop_assum SUBST_ALL_TAC) >> simp[]) >>
first_x_assum drule >> rw[] >>
`fsatis (mm2folm M) (Œªn. w) phi = fsatis (mm2folm M) œÉm‚¶áx ‚Ü¶ w‚¶à phi /\
 fsatis (mm2folm N) (Œªn. v) phi = fsatis (mm2folm N) œÉn‚¶áx ‚Ü¶ v‚¶à phi`
   suffices_by metis_tac[] >>
strip_tac
>- (`feval (mm2folm M) (Œªn. w) phi = feval (mm2folm M) œÉm‚¶áx ‚Ü¶ w‚¶à phi`
        by
         (irule holds_valuation >> fs[SUBSET_DEF] >>
          rw[combinTheory.APPLY_UPDATE_THM]) >>
       `valuation (mm2folm M) (Œªn:num. w) /\
        valuation (mm2folm M) œÉm‚¶áx ‚Ü¶ w‚¶à`
        by fs[valuation_def,mm2folm_def,bisim_world_def] >>
        fs[fsatis_def]) >>
`feval (mm2folm N) (Œªn. v) phi = feval (mm2folm N) œÉn‚¶áx ‚Ü¶ v‚¶à phi`
        by
         (irule holds_valuation >> fs[SUBSET_DEF] >>
          rw[combinTheory.APPLY_UPDATE_THM]) >>
       `valuation (mm2folm N) (Œªn:num. v) /\
        valuation (mm2folm N) œÉn‚¶áx ‚Ü¶ v‚¶à`
        by fs[valuation_def,mm2folm_def,bisim_world_def] >>
        fs[fsatis_def]
QED

Theorem compactness_thm_L1tau:
INFINITE (univ (:Œ±)) ==>
!A.
  ((!f. f IN A ==> L1tau f) /\
   (!ss. (FINITE ss /\ ss ‚äÜ A) ==>
     ?M:Œ± folModels$model œÉ:num -> Œ±. valuation M œÉ /\
                   (!ff. ff IN ss ==> feval M œÉ ff))) ==>
 (?M:Œ± folModels$model œÉ:num -> Œ±. valuation M œÉ /\
                   (!f. f IN A ==> feval M œÉ f))
Proof
rw[] >> SPOSE_NOT_THEN ASSUME_TAC >>
Cases_on `FINITE A` (* 2 *)
>- (first_x_assum drule >> rw[SUBSET_DEF] >> metis_tac[]) >>
`?ss. FINITE ss ‚àß ss ‚äÜ A /\
      (!M œÉ. valuation M œÉ ==> ?ff. ff ‚àà ss /\ ¬¨feval M œÉ ff)`
suffices_by metis_tac[] >>
`?f. f IN A` by metis_tac[INFINITE_INHAB] >>
`entails (:Œ±) (A DELETE f) (fNOT f)`
  by
   (rw[entails_def] >> SPOSE_NOT_THEN ASSUME_TAC >>
    `!f. f IN A ==> feval M v f` suffices_by metis_tac[] >>
    rw[] >> Cases_on `f = f'` (* 2 *)
    >- fs[] >> fs[DELETE_DEF,hold_def]) >>
`?A0. FINITE A0 /\ A0 ‚äÜ (A DELETE f) /\ entails (:Œ±) A0 (fNOT f)`
  by metis_tac[finite_entailment] >>
qexists_tac `f INSERT A0` >> rw[] (* 2 *)
>- fs[SUBSET_DEF] >>
fs[entails_def] >> first_x_assum drule >> strip_tac >>
Cases_on `feval M œÉ f`
>- (`?ff. ff IN A0 /\ ¬¨feval M œÉ ff` suffices_by metis_tac[] >>
   SPOSE_NOT_THEN ASSUME_TAC >>
   `¬¨feval M œÉ f` suffices_by metis_tac[] >>
   `interpretation (language (fNOT f INSERT A0)) M ‚àß M.Dom ‚â† ‚àÖ ‚àß
    hold M œÉ A0` suffices_by metis_tac[] >> rw[] (* 3 *)
   >- (simp[interpretation_def,language_def] >>
      `functions (fNOT f INSERT A0) = {}`
        suffices_by metis_tac[MEMBER_NOT_EMPTY] >>
      rw[functions_def] >>
      `{form_functions f' | f' = fNOT f ‚à® f' ‚àà A0} = {‚àÖ}`
       suffices_by metis_tac[] >>
      rw[Once EXTENSION] >>
      `(!f. f IN A0 ==> form_functions f = {}) /\ form_functions (fNOT f) = {}`
       suffices_by metis_tac[] >> rw[] (* 2 *)
      >- fs[SUBSET_DEF,L1tau_def] >>
      fs[form_functions_def,fNOT_def,L1tau_def])
   >- (rw[GSYM MEMBER_NOT_EMPTY] >> metis_tac[valuation_def])
   >- rw[hold_def])
>- metis_tac[]
QED

Theorem compactness_corollary_L1tau:
INFINITE (univ (:Œ±)) ==>
!A a. L1tau a ==>
  ((!f. f IN A ==> L1tau f) /\
   (!M:Œ± folModels$model œÉ:num -> Œ±. valuation M œÉ ==>
    (!f. f IN A ==> feval M œÉ f) ==> feval M œÉ a)) ==>
  (?ss. FINITE ss /\ ss ‚äÜ A /\
        (!M:Œ± folModels$model œÉ:num -> Œ±. valuation M œÉ ==>
          (!f. f IN ss ==> feval M œÉ f) ==> feval M œÉ a))
Proof
rw[] >> drule compactness_thm_L1tau >> rw[] >>
SPOSE_NOT_THEN ASSUME_TAC >>
last_x_assum (qspec_then `A ‚à™ {fNOT a}` assume_tac) >>
`?M œÉ. valuation M œÉ /\ (‚àÄf. f ‚àà A ‚áí feval M œÉ f) /\ ¬¨feval M œÉ a`
  suffices_by metis_tac[] >>
`‚àÉM œÉ. valuation M œÉ ‚àß ‚àÄf. f ‚àà A ‚à™ {fNOT a} ‚áí feval M œÉ f`
  suffices_by
   (rw[fNOT_def,feval_def] >> map_every qexists_tac [`M`,`œÉ`] >>
    `feval M œÉ (a -> fFALSE)` by metis_tac[] >>
    `¬¨feval M œÉ a` by fs[feval_def] >> metis_tac[]) >>
first_x_assum irule >> rw[] (* 3 *)
>- metis_tac[]
>- fs[L1tau_def,fNOT_def,form_functions_def,form_predicates]
>- (`ss DELETE (fNOT a) ‚äÜ A` by (fs[DELETE_DEF,SUBSET_DEF] >> metis_tac[]) >>
   `FINITE (ss DELETE (fNOT a))` by fs[] >>
   first_x_assum drule_all >> rw[] >> map_every qexists_tac [`M`,`œÉ`] >> rw[] >>
   Cases_on `ff = fNOT a` (* 2 *)
   >> rw[])
QED

Theorem thm_2_68_half1:
!a x. INFINITE univ (:Œ±) ==>
      (invar4bisim x
       (t1: ((num -> Œ±) -> bool) itself)
       (t2: ((num -> Œ±) -> bool) itself) a ==>
       ?phi.
          !M (v:num -> Œ±). valuation M v ==>
                           (feval M v a <=> feval M v (ST x phi)))
Proof
rw[] >>
qabbrev_tac
  `MOC = {ST x phi | phi |
           (!M:Œ± folModels$model v.
               valuation M v ==>
                feval M v a ==> feval M v (ST x phi))}` >>
`!M:Œ± folModels$model v. valuation M v ==>
               (!ff. ff IN MOC ==> feval M v ff) ==> feval M v a`
  suffices_by
   (strip_tac >> drule compactness_corollary_L1tau >> rw[] >>
    first_x_assum (qspecl_then [`MOC`,`a`] assume_tac) >>
    `L1tau a ‚àß (‚àÄf. f ‚àà MOC ‚áí L1tau f)`
      by
       (fs[invar4bisim_def,Abbr`MOC`] >> rw[] >> metis_tac[ST_L1tau]) >>
    first_x_assum drule_all >> rw[] >>
    drule ST_BIGCONJ >> rw[] >>
    first_x_assum (qspec_then `x` assume_tac) >>
    `(‚àÄf. f ‚àà ss ‚áí ‚àÉphi. f = ST x phi)`
      by
       (fs[Abbr`MOC`,SUBSET_DEF] >> metis_tac[]) >>
    first_x_assum drule >>
    rw[] >> qexists_tac `psi` >> rw[EQ_IMP_THM] (* 2 *)
    >- (`IMAGE v ùïå(:num) ‚äÜ M.Dom`
          by (fs[IMAGE_DEF,SUBSET_DEF,valuation_def] >> metis_tac[]) >>
        `‚àÄf. f ‚àà ss ‚áí feval M v f` suffices_by metis_tac[] >>
        fs[Abbr`MOC`,SUBSET_DEF] >> metis_tac[]
       )
    >- (`IMAGE v ùïå(:num) ‚äÜ M.Dom`
          by (fs[IMAGE_DEF,SUBSET_DEF,valuation_def] >> metis_tac[]) >>
        `‚àÄf. f ‚àà ss ‚áí feval M v f` by metis_tac[] >>
        metis_tac[])
 ) >>
rw[] >>
qabbrev_tac `Tx = {ST x phi |phi| feval M v (ST x phi)}` >>
`?N œÉn. valuation N œÉn /\ (!f. (f IN Tx \/ f = a) ==> feval N œÉn f)`
   by
   (SPOSE_NOT_THEN ASSUME_TAC >>
    (*`entails (:Œ±) Tx (fNOT a)`
      by (rw[entails_def,hold_def] >> metis_tac[]) >>*)
    `!M v. valuation M v ==>
            (‚àÄf. f ‚àà Tx ‚áí feval M v f) ‚áí feval M v (fNOT a)`
      by
       (rw[fNOT_def,feval_def] >> metis_tac[]) >>
    (* drule (folCanonTheory.finite_entailment |> GEN_ALL) >>
    strip_tac >> first_x_assum (qspecl_then [`fNOT a`,`Tx`] assume_tac) >>
    fs[] >> *)
    drule compactness_corollary_L1tau >> strip_tac >>
    first_x_assum (qspecl_then [`Tx`,`fNOT a`] assume_tac) >>
    `L1tau (fNOT a) ‚àß (‚àÄf. f ‚àà Tx ‚áí L1tau f)`
      by
       (rw[] (* 2 *)
        >- fs[invar4bisim_def,L1tau_def,fNOT_def,
              form_functions_def,form_predicates]
        >- (fs[Abbr`Tx`] >> metis_tac[ST_L1tau])) >>
    first_x_assum drule_all >> strip_tac >>
    drule ST_BIGCONJ >> strip_tac >>
    first_x_assum (qspec_then `x` assume_tac) >>
    `(‚àÄf. f ‚àà ss ‚áí ‚àÉphi. f = ST x phi)`
      by
       (rw[] >> fs[Abbr`Tx`,SUBSET_DEF] >> metis_tac[]) >>
    first_x_assum drule >> strip_tac >> rw[] >>
    `!M v. valuation M v ==> (feval M v a ==> ¬¨(feval M v (ST x psi)))`
      by
       (rw[] >>
        `IMAGE v' ùïå(:num) ‚äÜ M'.Dom`
          by
           (fs[valuation_def,IMAGE_DEF,SUBSET_DEF] >> metis_tac[]) >>
        SPOSE_NOT_THEN ASSUME_TAC >>
        `feval M' v' (fNOT a)` by metis_tac[] >>
        fs[feval_def,fNOT_def]) >>
    `(ST x (¬¨psi)) IN MOC`
      by
       (rw[Abbr`MOC`] >> qexists_tac `¬¨psi` >> rw[ST_fNOT]) >>
    `feval M v (fNOT (ST x psi))` by fs[] >>
    fs[feval_def] >>
    `IMAGE v ùïå(:num) ‚äÜ M.Dom`
      by (fs[IMAGE_DEF,SUBSET_DEF,valuation_def] >> metis_tac[]) >>
    `?f. f ‚àà ss /\ ¬¨feval M v f` by metis_tac[] >>
    fs[Abbr`Tx`,SUBSET_DEF] >> metis_tac[]
   ) >>
(*existence of N*)
`feval N œÉn a` by fs[] >>
qabbrev_tac `w0 = v x` >>
qabbrev_tac `v0 = œÉn x` >>
`!phi. satis (folm2mm M) w0 phi <=> satis (folm2mm N) v0 phi`
  by
   (`IMAGE v ùïå(:num) ‚äÜ (folm2mm M).frame.world /\
     IMAGE œÉn ùïå(:num) ‚äÜ (folm2mm N).frame.world`
      by (fs[valuation_def,IMAGE_DEF,SUBSET_DEF,folm2mm_def] >> metis_tac[]) >>
    rw[EQ_IMP_THM] (* 2 *)
    >- (`ST x phi IN Tx`
          by
           (`fsatis (mm2folm (folm2mm M)) v (ST x phi)`
              by metis_tac[Abbr`w`,prop_2_47_i] >>
            rw[Abbr`Tx`] >>
            `feval M v (ST x phi)` suffices_by metis_tac[] >>
            `form_functions (ST x phi) = {}`
              by metis_tac[ST_form_functions_EMPTY] >>
            fs[fsatis_def] >>
            `feval (mm2folm (folm2mm M)) v (ST x phi) <=>
             feval M v (ST x phi)` suffices_by metis_tac[] >>
            irule L1tau_mm2folm_folm2mm_comm_feval >> rw[] >>
            metis_tac[ST_L1tau]
           ) >>
        `feval N œÉn (ST x phi)` by metis_tac[] >>
        `feval (mm2folm (folm2mm N)) œÉn (ST x phi)`
          by
           (`feval (mm2folm (folm2mm N)) œÉn (ST x phi) <=>
             feval N œÉn (ST x phi)`
              by
               (irule L1tau_mm2folm_folm2mm_comm_feval >>
                metis_tac[ST_L1tau]) >>
            metis_tac[]) >>
        rw[Abbr`v0`] >>
        `fsatis (mm2folm (folm2mm N)) œÉn (ST x phi)`
           suffices_by metis_tac[prop_2_47_i] >>
        rw[fsatis_def,valuation_def] >> fs[mm2folm_def,IMAGE_DEF,SUBSET_DEF] >>
        metis_tac[])
    >- (SPOSE_NOT_THEN ASSUME_TAC >>
        `ST x (NOT phi) IN Tx`
          by
           (`satis (folm2mm M) w0 (NOT phi)`
              by
               (rw[satis_def,Abbr`w0`] >>
                fs[IMAGE_DEF,SUBSET_DEF] >> metis_tac[]) >>
            `fsatis (mm2folm (folm2mm M)) v (ST x (NOT phi))`
              by
               (`fsatis (mm2folm (folm2mm M)) v (ST x (¬¨phi))`
                  suffices_by metis_tac[ST_fNOT] >>
                `satis (folm2mm M) (v x) (¬¨phi) <=>
                 fsatis (mm2folm (folm2mm M)) v (ST x (¬¨phi))`
                  suffices_by metis_tac[Abbr`w0`] >>
                irule prop_2_47_i >> rw[]
               ) >>
            rw[Abbr`Tx`] >>
            qexists_tac `NOT phi` >> rw[ST_fNOT] >>
            `form_functions (ST x phi) = {}`
              by metis_tac[ST_form_functions_EMPTY] >>
            fs[fsatis_def] >>
            `feval (mm2folm (folm2mm M)) v (ST x phi) <=>
             feval M v (ST x phi)` suffices_by metis_tac[] >>
            irule L1tau_mm2folm_folm2mm_comm_feval >>
            metis_tac[ST_L1tau]
           ) >>
        `feval N œÉn (ST x (NOT phi))` by metis_tac[] >>
        `feval (mm2folm (folm2mm N)) œÉn (ST x (NOT phi)) <=>
         feval N œÉn (ST x (¬¨phi))`
          by
           (irule L1tau_mm2folm_folm2mm_comm_feval >> metis_tac[ST_L1tau]) >>
        `feval (mm2folm (folm2mm N)) œÉn (ST x (NOT phi))`
          by metis_tac[] >>
        fs[Abbr`v0`] >>
        `¬¨fsatis (mm2folm (folm2mm N)) œÉn (ST x phi)`
           suffices_by metis_tac[prop_2_47_i] >>
        rw[fsatis_def,valuation_def] >> fs[mm2folm_def,IMAGE_DEF,SUBSET_DEF] >>
        metis_tac[])
   ) >>
(*apply 2.74*)
`v0 IN (folm2mm N).frame.world /\ w0 IN (folm2mm M).frame.world`
  by (fs[folm2mm_def,valuation_def,Abbr`w0`,Abbr`v0`] >> metis_tac[]) >>
drule (thm_2_74_half2 |> INST_TYPE [beta |-> ``:'a``]) >>
strip_tac >>
first_x_assum (qspecl_then [`folm2mm N`,`v0`] assume_tac) >>
first_x_assum drule >> rw[] >>
fs[invar4bisim_def] >>
qabbrev_tac `Mst = (ultraproduct_model U I' (Œªi. folm2mm M))` >>
qabbrev_tac `Nst = (ultraproduct_model U I' (Œªi. folm2mm N))` >>
qabbrev_tac
  `wst = {fw | Uequiv U I' (models2worlds (Œªi. folm2mm M)) (Œªi. w0) fw}` >>
qabbrev_tac
  `vst = {fv | Uequiv U I' (models2worlds (Œªi. folm2mm N)) (Œªi. v0) fv}` >>
first_x_assum (qspecl_then [`Mst`,`Nst`,`vst`,`wst`] assume_tac) >> rfs[] >>
drule (corollary_A_21 |> INST_TYPE [alpha |-> ``:num``,beta |-> ``:'a``]) >>
rw[] >>
`(feval M v a <=> fsatis (mm2folm Mst) (\x. wst) a) /\
 fsatis (mm2folm Nst) (\x. vst) a`
  suffices_by
   (rw[] >>
    first_x_assum
      (qspecl_then [`(Œªx. wst)`,`(Œªx. vst)`] assume_tac) >>
    `(Œªx. wst)‚¶áx ‚Ü¶ wst‚¶à = (Œªx. wst) ‚àß (Œªx. vst)‚¶áx ‚Ü¶ vst‚¶à = (Œªx. vst)`
      by simp[] >> ntac 2 (pop_assum SUBST_ALL_TAC) >>
    rw[] >> fs[] >>
    `(fsatis (mm2folm Mst) (Œªx. wst) a ‚áî fsatis (mm2folm Nst) (Œªx. vst) a)`
      suffices_by metis_tac[] >>
    first_x_assum irule >> fs[valuation_def,mm2folm_def,bisim_world_def]
   ) >>
`(feval M v a ‚áî fsatis (mm2folm Mst) (Œªx. wst) a) /\
 (feval N œÉn a <=> fsatis (mm2folm Nst) (Œªx. vst) a)`
suffices_by metis_tac[] >>
`!M œÉ a (I:num -> bool) U.
  L1tau a /\ FV a ‚äÜ {x} /\ ultrafilter U I /\ valuation M œÉ ==>
  (feval M œÉ a <=>
     feval (mm2folm (ultraproduct_model U I (Œªi. folm2mm M)))
       (Œªx. {fw | Uequiv U I (models2worlds (Œªi. folm2mm M)) (Œªi. œÉ x) fw}) a)`
  suffices_by
   (rpt strip_tac (* 2 *)
    >- (first_x_assum (qspecl_then [`M`,`v`,`a`,`I'`,`U`] assume_tac) >>
        first_x_assum drule_all >> strip_tac >>
        fs[Abbr`Mst`,Abbr`wst`,Abbr`w0`] >> rw[] >>
        fs[fsatis_def] >>
        `valuation (mm2folm (ultraproduct_model U I' (Œªi. folm2mm M)))
          (Œªx':num.
            {fw | Uequiv U I' (models2worlds (Œªi. folm2mm M)) (Œªi. v x) fw})`
          by
           (rw[valuation_def,mm2folm_def,ultraproduct_model_def] >>
            rw[ultraproduct_def,models2worlds_def,folm2mm_def,partition_def] >>
            qexists_tac `\i. v x` >> rw[Cart_prod_def,EXTENSION,EQ_IMP_THM] (*2*)           >- fs[folm2mm_def,valuation_def] >>
            fs[Uequiv_def,Cart_prod_def]
            ) >>
        fs[] >>
        irule holds_valuation >> rw[] >>
        `x' = x` by fs[SUBSET_DEF] >>
        rw[])
    >- (first_x_assum (qspecl_then [`N`,`œÉn`,`a`,`I'`,`U`] assume_tac) >>
        first_x_assum drule_all >> strip_tac >>
        fs[Abbr`Nst`,Abbr`vst`,Abbr`v0`] >> rw[] >>
        fs[fsatis_def] >>
        `valuation (mm2folm (ultraproduct_model U I' (Œªi. folm2mm N)))
          (Œªx':num.
            {fw | Uequiv U I' (models2worlds (Œªi. folm2mm N)) (Œªi. œÉn x) fw})`
          by
           (rw[valuation_def,mm2folm_def,ultraproduct_model_def] >>
            rw[ultraproduct_def,models2worlds_def,folm2mm_def,partition_def] >>
            qexists_tac `\i. œÉn x` >> rw[Cart_prod_def,EXTENSION,EQ_IMP_THM] (*2*)           >- fs[folm2mm_def] >>
            fs[Uequiv_def,Cart_prod_def]
            ) >>
        fs[] >>
        irule holds_valuation >> rw[] >>
        `x' = x` by fs[SUBSET_DEF] >>
        rw[])
   ) >>
metis_tac[L1tau_ultraproduct_mm2folm_folm2mm_comm_feval]
QED



Theorem holds_functions_predicates:
   M2.Dom = M1.Dom ‚àß
  (‚àÄP zs. (P,LENGTH zs) ‚àà form_predicates p ‚áí (M2.Pred P zs ‚áî M1.Pred P zs)) /\
  (‚àÄf zs. (f,LENGTH zs) ‚àà form_functions p ‚áí M2.Fun f zs = M1.Fun f zs) ‚áí
      (‚àÄv. feval M2 v p ‚áî feval M1 v p)
Proof
rw[] >>
qabbrev_tac `M1' = <| Dom := M1.Dom ;
                      Fun := M2.Fun ;
                      Pred := M1.Pred |>` >>
`M2.Dom = M1'.Dom`
  by
   (fs[Abbr`M1'`]) >>
drule holds_predicates >> rw[] >>
`(feval M2 v p ‚áî feval M1' v p)`
  by
   (first_x_assum irule >> rw[] (*  2*)
    >- fs[Abbr`M1'`,FUN_EQ_THM]
    >- fs[Abbr`M1'`]) >>
rw[] >>
`M1'.Dom = M1.Dom` by fs[Abbr`M1'`] >>
drule holds_functions >> rw[] >>
first_x_assum irule >> rw[] (* 2 *)
>- fs[Abbr`M1'`]
>- fs[Abbr`M1'`,FUN_EQ_THM]
QED

Theorem thm_2_68_half2':
!phi x. invar4bisim x (:Œ±) (:Œ±) (ST x phi)
Proof
rw[invar4bisim_def] (* 3 *)
>- metis_tac[ST_FV_singleton]
>- metis_tac[ST_L1tau]
>- metis_tac[thm_2_68_half2]
QED




Theorem ultraproduct_comm_feval2:
!phi U I MS.
  ultrafilter U I ==>
  L1tau phi ==>
  (‚àÄn0 l0 i. i IN I ==> (MS i).Fun n0 l0 ‚àà (MS i).Dom) ==>
  !œÉ.
     IMAGE œÉ (univ(:num)) ‚äÜ ultraproduct U I (folmodels2Doms MS) ==>
     (feval (ultraproduct_folmodel U I MS) œÉ phi <=>
      feval (mm2folm (ultraproduct_model U I (Œªi. folm2mm (MS i)))) œÉ phi)
Proof
Induct_on `phi` (* 4 *)
>- fs[feval_def]
>- (rw[feval_def] >>
    `MAP (termval (ultraproduct_folmodel U I' MS) œÉ) l =
     MAP (termval
           (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))) œÉ) l`
     by
      (irule listTheory.MAP_CONG >> rw[] >> irule ultraproduct_comm_termval' >> rw[] >> fs[L1tau_def] >>
       SPOSE_NOT_THEN ASSUME_TAC >> fs[GSYM MEMBER_NOT_EMPTY] >>
       `x' IN LIST_UNION (MAP term_functions l)`
         suffices_by metis_tac[MEMBER_NOT_EMPTY] >>
       simp[IN_LIST_UNION] >> qexists_tac `term_functions x` >>
       rw[MEM_MAP] >> metis_tac[]) >>
    rw[] >>
    qabbrev_tac
      `mapl =
        MAP (termval
             (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))) œÉ) l` >>
    Cases_on `mapl = []` (* 2 *)
    >- (`form_predicates (Pred n l) ‚äÜ (0,2) INSERT {(p,1) | p ‚àà ùïå(:num)}`
         by metis_tac[L1tau_def] >>
       `l = []` by
         (SPOSE_NOT_THEN ASSUME_TAC >> fs[Abbr`mapl`]) >>
       fs[])
    >- (`(?a. l = [a]) \/
         (?a b. l = [a;b]) \/
         (?a b c d. l = a :: b :: c :: d)`
          by
           (Cases_on `l` >> fs[Abbr‚Äòmapl‚Äô] >>
            Cases_on `t` >> fs[] >> Cases_on `t'` >> fs[]) (* 3 *)
        >- (rw[] >>
            qabbrev_tac
             `sl = termval (ultraproduct_folmodel U I' MS) œÉ a` >>
            rw[mm2folm_def,
               ultraproduct_folmodel_def,ultraproduct_model_def] >>
            `sl ‚àà ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i)))`
             by
              (rw[Abbr`sl`] >> drule termval_IN_ultraproduct_Dom' >>
               rw[] >>
               metis_tac[folmodels2Doms_models2worlds_folm2mm]) >>
            (*remove the conj first*)
           `sl <> {}` by metis_tac[ultraproduct_eqclass_non_empty] >>
           `CHOICE sl IN sl` by metis_tac[CHOICE_DEF] >>
           `{i | i ‚àà I' ‚àß (MS i).Pred n [CHOICE sl i]} =
            {i | i ‚àà I' ‚àß CHOICE sl i ‚àà (folm2mm (MS i)).valt n}`
             by (rw[EXTENSION,EQ_IMP_THM,folm2mm_def] >>
                 drule ultraproduct_val_IN_A >> rw[] >>
                 first_x_assum
                   (qspecl_then [`models2worlds (Œªi. folm2mm (MS i))`,
                                 `sl`,`CHOICE sl`,`x`] assume_tac) >>
                 `(models2worlds (Œªi. folm2mm (MS i))) x = (MS x).Dom`
                   by rw[models2worlds_def,folm2mm_def] >>
                 fs[]) >>
           rw[EQ_IMP_THM] >- metis_tac[] >>
           `{i | i IN I' /\ f i = (CHOICE sl) i} IN U`
             by
              (irule ultraproduct_same_eqclass >> rw[] >>
               map_every qexists_tac
                [`models2worlds (Œªi. folm2mm (MS i))`,`sl`] >>
               rw[]) >>
           `({i | i ‚àà I' ‚àß f i ‚àà (folm2mm (MS i)).valt n} ‚à©
             {i | i ‚àà I' ‚àß f i = CHOICE sl i}) IN U`
             by metis_tac[ultrafilter_INTER] >>
           irule ultrafilter_SUBSET' >> rw[PULL_EXISTS] (* 2 *)
           >- (qexists_tac
                 `{i | i ‚àà I' ‚àß f i ‚àà (folm2mm (MS i)).valt n} ‚à©
                  {i | i ‚àà I' ‚àß f i = CHOICE sl i}` >>
               rw[SUBSET_DEF] >> metis_tac[]) >>
           qexists_tac `I'` >> rw[SUBSET_DEF]
           ) (*1 out of 3*)
      >- (rw[] >>
            qabbrev_tac
             `sl1 = termval (ultraproduct_folmodel U I' MS) œÉ a` >>
            qabbrev_tac
             `sl2 = termval (ultraproduct_folmodel U I' MS) œÉ b` >>
            rw[mm2folm_def,ultraproduct_folmodel_def,ultraproduct_model_def] >>
            `{i | i ‚àà I' ‚àß (MS i).Pred n [CHOICE sl1 i; CHOICE sl2 i]} ‚àà U ==>
             n = 0`
              by
               (rw[] >> SPOSE_NOT_THEN ASSUME_TAC >>
                `{i | i ‚àà I' ‚àß (MS i).Pred n [CHOICE sl1 i; CHOICE sl2 i]} = {}`
                  by
                   (fs[] >>
                    `form_predicates (Pred n [a; b]) ‚äÜ
                     (0,2) INSERT {(p,1) | p ‚àà ùïå(:num)}` by metis_tac[L1tau_def] >> fs[]
                ) >>
                metis_tac[EMPTY_NOTIN_ultrafilter]) >>
            `sl1 ‚àà ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i))) ‚àß
             sl2 ‚àà ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i)))`
              by
               (`!t. (termval (ultraproduct_folmodel U I' MS) œÉ t) IN
                 ultraproduct U I' (models2worlds (Œªi. folm2mm (MS i)))`
                  suffices_by metis_tac[] >>
                drule termval_IN_ultraproduct_Dom' >>
                rw[] >>
                metis_tac[folmodels2Doms_models2worlds_folm2mm]) >>
            `sl1 <> {}` by metis_tac[ultraproduct_eqclass_non_empty] >>
            `sl2 <> {}` by metis_tac[ultraproduct_eqclass_non_empty] >>
            `CHOICE sl1 IN sl1 /\ CHOICE sl2 IN sl2` by metis_tac[CHOICE_DEF]>>
            rw[EQ_IMP_THM,EXTENSION] (* 2 *)
            >- (map_every qexists_tac [`CHOICE sl1`,`CHOICE sl2`] >>
                rw[] >>
                `n = 0` by metis_tac[] >>
                `!i. i IN I' ==> CHOICE sl1 i ‚àà (MS i).Dom /\
                 CHOICE sl2 i ‚àà (MS i).Dom`
                  by
                   (drule ultraproduct_val_IN_A >>
                    `!x. models2worlds (Œªi. folm2mm (MS i)) x = (MS x).Dom`
                      by rw[models2worlds_def,folm2mm_def] >>
                    metis_tac[CHOICE_DEF,ultraproduct_eqclass_non_empty]) >>
                rw[folm2mm_def] >>
                `{i | i ‚àà I' ‚àß (MS i).Pred 0 [CHOICE sl1 i; CHOICE sl2 i]} =
                 {i | i ‚àà I' ‚àß (MS i).Pred 0 [CHOICE sl1 i; CHOICE sl2 i] ‚àß
                   CHOICE sl1 i ‚àà (MS i).Dom ‚àß CHOICE sl2 i ‚àà (MS i).Dom}`
                  by rw[EXTENSION,EQ_IMP_THM] >>
                metis_tac[]) >>
            qmatch_abbrev_tac `ss IN U` >>
            irule ultrafilter_INTER_INTER_SUBSET >>
            `ss ‚äÜ I'` by fs[Abbr`ss`,SUBSET_DEF,INTER_DEF] >> rw[] (* 2 *)
            >- (map_every qexists_tac
                 [`{i | i IN I' /\ f i = (CHOICE sl1) i}`,
                  `{i | i IN I' /\ g i = (CHOICE sl2) i}`,
                  `{i | i ‚àà I' ‚àß (folm2mm (MS i)).frame.rel (f i) (g i)}`] >>
                rw[SUBSET_DEF,folm2mm_def] (* 3 *)
                >- (irule ultraproduct_same_eqclass >> rw[] >>
                    map_every qexists_tac
                    [`models2worlds (Œªi. folm2mm (MS i))`,`sl1`] >>
                    rw[])
                >- (irule ultraproduct_same_eqclass >> rw[] >>
                    map_every qexists_tac
                    [`models2worlds (Œªi. folm2mm (MS i))`,`sl2`] >>
                    rw[]) >>
                fs[Abbr`ss`] >> metis_tac[]) >>
            qexists_tac `I'` >> rw[SUBSET_DEF])
        >- (fs[] >>
            `form_predicates (Pred n (a::b::c::d)) ‚äÜ
             (0,2) INSERT {(p,1) | p ‚àà ùïå(:num)}` by metis_tac[L1tau_def] >>
             fs[])
    )
   )
>- (rw[] >>
    `L1tau phi /\ L1tau phi'` suffices_by metis_tac[] >>
    metis_tac[L1tau_fIMP])
>- (rw[feval_def,EQ_IMP_THM] (* 2 *)
    >- (`L1tau phi` by metis_tac[L1tau_FALL] >>
        first_x_assum drule >> rw[] >>
        `IMAGE œÉ‚¶án ‚Ü¶ a‚¶à ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms MS)`
          by (irule IMAGE_UPDATE >>
              `(mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Dom =
               ultraproduct U I' (folmodels2Doms MS)`
               by
                (rw[mm2folm_def,ultraproduct_model_def] >>
                 `(models2worlds (Œªi. folm2mm (MS i))) = (folmodels2Doms MS)`
                   suffices_by metis_tac[] >>
                 rw[FUN_EQ_THM,models2worlds_def,
                    folm2mm_def,folmodels2Doms_def]) >>
              metis_tac[]) >>
        first_x_assum drule >> rw[] >>
        `(ultraproduct_folmodel U I' MS).Dom =
         (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Dom`
          suffices_by metis_tac[] >>
        rw[ultraproduct_folmodel_def,mm2folm_def,ultraproduct_model_def] >>
        metis_tac[folmodels2Doms_models2worlds_folm2mm])
    >- (`L1tau phi` by metis_tac[L1tau_FALL] >>
        first_x_assum drule >> rw[] >>
        `IMAGE œÉ‚¶án ‚Ü¶ a‚¶à ùïå(:num) ‚äÜ ultraproduct U I' (folmodels2Doms MS)`
          by (irule IMAGE_UPDATE >> rw[] >> fs[ultraproduct_folmodel_def]) >>
        `(ultraproduct_folmodel U I' MS).Dom =
         (mm2folm (ultraproduct_model U I' (Œªi. folm2mm (MS i)))).Dom`
          suffices_by metis_tac[] >>
        rw[ultraproduct_folmodel_def,mm2folm_def,ultraproduct_model_def] >>
        metis_tac[folmodels2Doms_models2worlds_folm2mm])
    )
QED


Theorem holds_functions_predicates':
   (M2.Dom = M1.Dom ‚àß valuation M1 v  /\ valuation M2 v) ==>
  (‚àÄP zs. (P,LENGTH zs) ‚àà form_predicates p ‚áí (M2.Pred P zs ‚áî M1.Pred P zs)) /\
  (‚àÄf zs. (f,LENGTH zs) ‚àà form_functions p ‚áí M2.Fun f zs = M1.Fun f zs) ‚áí
      (‚àÄv. feval M2 v p ‚áî feval M1 v p)
Proof
metis_tac[holds_functions_predicates]
QED



Theorem example_2_64_iii:
  ¬¨countably_saturated <|Dom:= univ(:num); Fun:= \f l. (CHOICE univ(:num)) ;
                         Pred := \n v. ?x. v = [x] /\ n < x|>
Proof
  rw[countably_saturated_def,expand_def,consistent_def,ftype_def,frealizes_def,
     n_saturated_def] >>
  qabbrev_tac ‚ÄòM = <|Dom:= univ(:num); Fun:= \f l. (CHOICE univ(:num)) ;
                     Pred := \n v. ?x. v = [x] /\ n < x|>‚Äô >>
  map_every qexists_tac [‚Äò0‚Äô,‚Äò{}‚Äô,‚Äò{fP n (fV a) | n | T}‚Äô,‚Äòa‚Äô,‚Äò\v.0‚Äô] >>
  rw[] (* 4 *)
  >- fs[Abbr‚ÄòM‚Äô]
  >- (fs[FV_def,FVT_def,SUBSET_DEF] >> rw[] >> fs[FV_def])
  >- (rw[] >>
      qabbrev_tac ‚Äò n = MAX_SET {n | (fP n (fV a)) IN G0}‚Äô >>
      qexists_tac ‚Äò\v. n + 1‚Äô >> rw[] (* 1 *) >>
      fs[SUBSET_DEF] >> first_x_assum drule >> rw[] >> rw[fsatis_def] (* 2 *)
      >- rw[valuation_def,Abbr‚ÄòM‚Äô]
      >- (rw[Abbr‚ÄòM‚Äô] >> fs[Abbr‚Äòn‚Äô] >>
          ‚Äòn' <= MAX_SET {n | fP n (fV a) ‚àà G0}‚Äô suffices_by fs[] >>
          irule in_max_set >>
          rw[] >>
          ‚Äò?f. INJ f {n | fP n (fV a) ‚àà G0} G0‚Äô suffices_by
            metis_tac[FINITE_INJ] >>
         qexists_tac ‚Äò\n. fP n (fV a)‚Äô >> rw[INJ_DEF])) >>
  map_every qexists_tac [‚Äò\v.0‚Äô,‚ÄòfP (w + 1) (fV a)‚Äô] >> rw[fsatis_def] >>
  ‚Äò¬¨M.Pred (w + 1) [w]‚Äô suffices_by metis_tac[] >>
  rw[Abbr‚ÄòM‚Äô,combinTheory.APPLY_UPDATE_THM]
QED

Theorem feq_thm_2_68_half2:
  ‚àÄphi a x. (FV a ‚äÜ {x} ‚àß L1tau a /\ feq (:Œ±) a (ST x phi)) ==>
            invar4bisim x (:Œ±) (:Œ±) a
Proof
  rw[] >> `invar4bisim x (:Œ±) (:Œ±) (ST x phi)` by metis_tac[thm_2_68_half2'] >>
  fs[feq_def,invar4bisim_def,fsatis_def] >> metis_tac[]
QED


Theorem thm_2_68_half1':
  ‚àÄa x.
    (INFINITE ùïå(:Œ±) /\
     invar4bisim x (:(num -> Œ±) -> bool) (:(num -> Œ±) -> bool) a) ‚áí
    ‚àÉ(phi:modalBasics$form). feq (:Œ±) a (ST x phi)

Proof
  rw[] >> drule thm_2_68_half1 >>  rw[feq_def] >> metis_tac[]
QED

val _ = export_theory();
